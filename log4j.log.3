[2015-08-17 19:20:06,667]DEBUG  4705[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-17 19:20:06,668]DEBUG  4706[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: select testresult from com.test.domain.TestResult testresult join testresult.run_TestCase_TestResults rtt join rtt.testCase tc where tc.id = :testCaseId and rtt.run.id = :runId
[2015-08-17 19:20:06,668]DEBUG  4706[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select testresult0_.id as id1_7_, testresult0_.endTime as endTime2_7_, testresult0_.result as result3_7_, testresult0_.startTime as startTim4_7_ from TestResult testresult0_ inner join Run_TestCase_TestResult run_testca1_ on testresult0_.id=run_testca1_.testResult_id inner join TestCase testcase2_ on run_testca1_.testCase_id=testcase2_.id where testcase2_.id=? and run_testca1_.run_id=?
[2015-08-17 19:20:06,668]DEBUG  4706[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-17 19:20:06,669]DEBUG  4707[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByEnvAndTestCase
[2015-08-17 19:20:06,670]DEBUG  4708[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:294) - parse() - HQL: select tr from com.test.domain.Run_TestCase_TestResult rtt join rtt.testResult tr join rtt.run run where run.environment.id = :envId and rtt.testCase.id = :testCaseId order by run.endTime desc
[2015-08-17 19:20:06,678]DEBUG  4716[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:312) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Run_TestCase_TestResult'
    |  |  |  \-[ALIAS] Node: 'rtt'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'rtt'
    |  |  |  |  \-[IDENT] Node: 'testResult'
    |  |  |  \-[ALIAS] Node: 'tr'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'rtt'
    |  |     |  \-[IDENT] Node: 'run'
    |  |     \-[ALIAS] Node: 'run'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'tr'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'run'
    |     |  |  |  \-[IDENT] Node: 'environment'
    |     |  |  \-[IDENT] Node: 'id'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'envId'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'rtt'
    |        |  |  \-[IDENT] Node: 'testCase'
    |        |  \-[IDENT] Node: 'id'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'testCaseId'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'run'
       |  \-[IDENT] Node: 'endTime'
       \-[DESCENDING] Node: 'desc'

[2015-08-17 19:20:06,679]DEBUG  4717[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-17 19:20:06,679]DEBUG  4717[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121) - select << begin [level=1, statement=select]
[2015-08-17 19:20:06,679]DEBUG  4717[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run_TestCase_TestResult (rtt) -> run_testca0_
[2015-08-17 19:20:06,680]DEBUG  4718[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca0_.id
[2015-08-17 19:20:06,680]DEBUG  4718[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testResult -> org.hibernate.type.ManyToOneType(com.test.domain.TestResult)
[2015-08-17 19:20:06,680]DEBUG  4718[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for testResult in com.test.domain.Run_TestCase_TestResult (tr) parent = [ {null} ]
[2015-08-17 19:20:06,680]DEBUG  4718[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestResult (tr) -> testresult1_
[2015-08-17 19:20:06,681]DEBUG  4719[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : rtt.testResult -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tr,role=null,tableName=TestResult,tableAlias=testresult1_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.testResult_id ,className=com.test.domain.TestResult}}
[2015-08-17 19:20:06,681]DEBUG  4719[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testResult -> run_testca0_.testResult_id
[2015-08-17 19:20:06,681]DEBUG  4719[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'TestResult testresult1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tr,role=com.test.domain.Run_TestCase_TestResult.testResult,tableName=TestResult,tableAlias=testresult1_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.testResult_id ,className=com.test.domain.TestResult}}

[2015-08-17 19:20:06,682]DEBUG  4720[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca0_.id
[2015-08-17 19:20:06,682]DEBUG  4720[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run -> org.hibernate.type.ManyToOneType(com.test.domain.Run)
[2015-08-17 19:20:06,682]DEBUG  4720[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for run in com.test.domain.Run_TestCase_TestResult (run) parent = [ {null} ]
[2015-08-17 19:20:06,682]DEBUG  4720[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run (run) -> run2_
[2015-08-17 19:20:06,683]DEBUG  4721[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : rtt.run -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=run,role=null,tableName=Run,tableAlias=run2_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.run_id ,className=com.test.domain.Run}}
[2015-08-17 19:20:06,683]DEBUG  4721[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.run -> run_testca0_.run_id
[2015-08-17 19:20:06,687]DEBUG  4725[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Run run2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=run,role=com.test.domain.Run_TestCase_TestResult.run,tableName=Run,tableAlias=run2_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.run_id ,className=com.test.domain.Run}}

[2015-08-17 19:20:06,688]DEBUG  4726[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tr -> testresult1_.id
[2015-08-17 19:20:06,688]DEBUG  4726[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run -> run2_.id
[2015-08-17 19:20:06,688]DEBUG  4726[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : environment -> org.hibernate.type.ManyToOneType(com.test.domain.Environment)
[2015-08-17 19:20:06,689]DEBUG  4727[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run does not require a join.
[2015-08-17 19:20:06,689]DEBUG  4727[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'environment.id'
[2015-08-17 19:20:06,690]DEBUG  4728[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run.environment -> run2_.environment_id
[2015-08-17 19:20:06,690]DEBUG  4728[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : environment.id -> org.hibernate.type.LongType@4d290165
[2015-08-17 19:20:06,690]DEBUG  4728[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run.environment.id -> run2_.environment_id
[2015-08-17 19:20:06,690]DEBUG  4728[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca0_.id
[2015-08-17 19:20:06,691]DEBUG  4729[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCase -> org.hibernate.type.ManyToOneType(com.test.domain.TestCase)
[2015-08-17 19:20:06,691]DEBUG  4729[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run_TestCase_TestResult does not require a join.
[2015-08-17 19:20:06,691]DEBUG  4729[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'testCase.id'
[2015-08-17 19:20:06,691]DEBUG  4729[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testCase -> run_testca0_.testCase_id
[2015-08-17 19:20:06,692]DEBUG  4730[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCase.id -> org.hibernate.type.LongType@4d290165
[2015-08-17 19:20:06,692]DEBUG  4730[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testCase.id -> run_testca0_.testCase_id
[2015-08-17 19:20:06,692]DEBUG  4730[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run -> run2_.id
[2015-08-17 19:20:06,692]DEBUG  4730[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : endTime -> org.hibernate.type.LongType@4d290165
[2015-08-17 19:20:06,693]DEBUG  4731[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run.endTime -> run2_.endTime
[2015-08-17 19:20:06,693]DEBUG  4731[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125) - select : finishing up [level=1, statement=select]
[2015-08-17 19:20:06,693]DEBUG  4731[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:671) - processQuery() :  ( SELECT ( {select clause} testresult1_.id ) ( FromClause{level=1} ( Run_TestCase_TestResult run_testca0_ TestResult testresult1_ Run run2_ ) ) ( where ( and ( = ( run2_.environment_id ( run2_.environment_id run2_.id environment ) id ) ? ) ( = ( run_testca0_.testCase_id ( run_testca0_.testCase_id run_testca0_.id testCase ) id ) ? ) ) ) ( order ( run2_.endTime run2_.id endTime ) desc ) )
[2015-08-17 19:20:06,706]DEBUG  4744[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [Run_TestCase_TestResult run_testca0_]
[2015-08-17 19:20:06,706]DEBUG  4744[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join TestResult testresult1_ on run_testca0_.testResult_id=testresult1_.id]
[2015-08-17 19:20:06,706]DEBUG  4744[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join Run run2_ on run_testca0_.run_id=run2_.id]
[2015-08-17 19:20:06,707]DEBUG  4745[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129) - select >> end [level=1, statement=select]
[2015-08-17 19:20:06,707]DEBUG  4745[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:281) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TestResult,Run,Run_TestCase_TestResult)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'testresult1_.id as id1_7_' {alias=tr, className=com.test.domain.TestResult, tableAlias=testresult1_}
    |  \-[SQL_TOKEN] SqlFragment: 'testresult1_.endTime as endTime2_7_, testresult1_.result as result3_7_, testresult1_.startTime as startTim4_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[rtt, run, tr], fromElementByTableAlias=[run_testca0_, run2_, testresult1_], fromElementsByPath=[rtt.testResult, rtt.run], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Run_TestCase_TestResult run_testca0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rtt,role=null,tableName=Run_TestCase_TestResult,tableAlias=run_testca0_,origin=null,columns={,className=com.test.domain.Run_TestCase_TestResult}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join TestResult testresult1_ on run_testca0_.testResult_id=testresult1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tr,role=com.test.domain.Run_TestCase_TestResult.testResult,tableName=TestResult,tableAlias=testresult1_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.testResult_id ,className=com.test.domain.TestResult}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join Run run2_ on run_testca0_.run_id=run2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=run,role=com.test.domain.Run_TestCase_TestResult.run,tableName=Run,tableAlias=run2_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.run_id ,className=com.test.domain.Run}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'run2_.environment_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=environment.id,path=run.environment.id,tableAlias=run2_,className=com.test.domain.Run,classAlias=run}
    |     |  |  +-[DOT] DotNode: 'run2_.environment_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=environment.id,path=run.environment,tableAlias=run2_,className=com.test.domain.Run,classAlias=run}
    |     |  |  |  +-[ALIAS_REF] IdentNode: 'run2_.id' {alias=run, className=com.test.domain.Run, tableAlias=run2_}
    |     |  |  |  \-[IDENT] IdentNode: 'environment' {originalText=environment}
    |     |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=envId, expectedType=org.hibernate.type.LongType@4d290165}
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'run_testca0_.testCase_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=testCase.id,path=rtt.testCase.id,tableAlias=run_testca0_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
    |        |  +-[DOT] DotNode: 'run_testca0_.testCase_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=testCase.id,path=rtt.testCase,tableAlias=run_testca0_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
    |        |  |  +-[ALIAS_REF] IdentNode: 'run_testca0_.id' {alias=rtt, className=com.test.domain.Run_TestCase_TestResult, tableAlias=run_testca0_}
    |        |  |  \-[IDENT] IdentNode: 'testCase' {originalText=testCase}
    |        |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=testCaseId, expectedType=org.hibernate.type.LongType@4d290165}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'run2_.endTime' {propertyName=endTime,dereferenceType=PRIMITIVE,getPropertyPath=endTime,path=run.endTime,tableAlias=run2_,className=com.test.domain.Run,classAlias=run}
       |  +-[ALIAS_REF] IdentNode: 'run2_.id' {alias=run, className=com.test.domain.Run, tableAlias=run2_}
       |  \-[IDENT] IdentNode: 'endTime' {originalText=endTime}
       \-[DESCENDING] SqlNode: 'desc'

[2015-08-17 19:20:06,708]DEBUG  4746[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-17 19:20:06,708]DEBUG  4746[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: select tr from com.test.domain.Run_TestCase_TestResult rtt join rtt.testResult tr join rtt.run run where run.environment.id = :envId and rtt.testCase.id = :testCaseId order by run.endTime desc
[2015-08-17 19:20:06,708]DEBUG  4746[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select testresult1_.id as id1_7_, testresult1_.endTime as endTime2_7_, testresult1_.result as result3_7_, testresult1_.startTime as startTim4_7_ from Run_TestCase_TestResult run_testca0_ inner join TestResult testresult1_ on run_testca0_.testResult_id=testresult1_.id inner join Run run2_ on run_testca0_.run_id=run2_.id where run2_.environment_id=? and run_testca0_.testCase_id=? order by run2_.endTime desc
[2015-08-17 19:20:06,708]DEBUG  4746[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-17 19:20:06,709]DEBUG  4747[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@7f3b7506]
[2015-08-17 19:20:06,714]DEBUG  4752[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,714]DEBUG  4752[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testResultDao'
[2015-08-17 19:20:06,714]DEBUG  4752[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,715]DEBUG  4753[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'run_TestCase_TestResultService' to bean named 'testResultDao'
[2015-08-17 19:20:06,715]DEBUG  4753[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,716]DEBUG  4754[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'Run_TestCase_TestResultServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-08-17 19:20:06,716]DEBUG  4754[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'run_TestCase_TestResultService' with 0 common interceptors and 1 specific interceptors
[2015-08-17 19:20:06,716]DEBUG  4754[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.Run_TestCase_TestResultServiceImpl@3a82ea2e]
[2015-08-17 19:20:06,718]DEBUG  4756[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'run_TestCase_TestResultService'
[2015-08-17 19:20:06,719]DEBUG  4757[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testCaseService'
[2015-08-17 19:20:06,719]DEBUG  4757[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testCaseService'
[2015-08-17 19:20:06,719]DEBUG  4757[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.impl.TestCaseServiceImpl.testCaseDao
[2015-08-17 19:20:06,720]DEBUG  4758[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestCaseServiceImpl.testSuiteDao
[2015-08-17 19:20:06,720]DEBUG  4758[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.service.TestSuiteService com.test.service.impl.TestCaseServiceImpl.testSuiteService
[2015-08-17 19:20:06,720]DEBUG  4758[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.impl.TestCaseServiceImpl.run_TestCase_TestResultDao
[2015-08-17 19:20:06,720]DEBUG  4758[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testCaseService' to allow for resolving potential circular references
[2015-08-17 19:20:06,722]DEBUG  4760[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.impl.TestCaseServiceImpl.testCaseDao
[2015-08-17 19:20:06,722]DEBUG  4760[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testCaseDao'
[2015-08-17 19:20:06,723]DEBUG  4761[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'testCaseDao'
[2015-08-17 19:20:06,723]DEBUG  4761[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestCaseServiceImpl.testSuiteDao
[2015-08-17 19:20:06,723]DEBUG  4761[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testSuiteDao'
[2015-08-17 19:20:06,723]DEBUG  4761[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testSuiteDao'
[2015-08-17 19:20:06,724]DEBUG  4762[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
[2015-08-17 19:20:06,724]DEBUG  4762[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testSuiteDao' to allow for resolving potential circular references
[2015-08-17 19:20:06,724]DEBUG  4762[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteDao': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
[2015-08-17 19:20:06,724]DEBUG  4762[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#20d0ddbe'
[2015-08-17 19:20:06,725]DEBUG  4763[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1b9d3518'
[2015-08-17 19:20:06,726]DEBUG  4764[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name '(inner bean)#1b9d3518'
[2015-08-17 19:20:06,726]DEBUG  4764[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,726]DEBUG  4764[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1b9d3518'
[2015-08-17 19:20:06,726]DEBUG  4764[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,727]DEBUG  4765[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,727]DEBUG  4765[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#20d0ddbe'
[2015-08-17 19:20:06,727]DEBUG  4765[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4333de35'
[2015-08-17 19:20:06,727]DEBUG  4765[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,728]DEBUG  4766[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4333de35'
[2015-08-17 19:20:06,728]DEBUG  4766[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#65a8c6c0'
[2015-08-17 19:20:06,728]DEBUG  4766[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'entityManagerFactory'
[2015-08-17 19:20:06,729]DEBUG  4767[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,729]DEBUG  4767[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#65a8c6c0'
[2015-08-17 19:20:06,730]DEBUG  4768[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'jpaMappingContext'
[2015-08-17 19:20:06,730]DEBUG  4768[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name 'testSuiteDao'
[2015-08-17 19:20:06,730]DEBUG  4768[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,730]DEBUG  4768[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,731]DEBUG  4769[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,731]DEBUG  4769[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,731]DEBUG  4769[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,731]DEBUG  4769[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,733]DEBUG  4771[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,733]DEBUG  4771[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,734]DEBUG  4772[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,734]DEBUG  4772[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,735]DEBUG  4773[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,736]DEBUG  4774[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,736]DEBUG  4774[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,736]DEBUG  4774[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,737]DEBUG  4775[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,737]DEBUG  4775[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,738]DEBUG  4776[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,738]DEBUG  4776[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,739]DEBUG  4777[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,739]DEBUG  4777[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,739]DEBUG  4777[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource@500bcb15
[2015-08-17 19:20:06,740]DEBUG  4778[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByRun
[2015-08-17 19:20:06,741]DEBUG  4779[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:294) - parse() - HQL: select distinct testsuite from com.test.domain.TestSuite testsuite join testsuite.testCases tcs join tcs.run_TestCase_TestResults trr where trr.run.id = :runId
[2015-08-17 19:20:06,754]DEBUG  4792[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:312) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'TestSuite'
    |  |  |  \-[ALIAS] Node: 'testsuite'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'testsuite'
    |  |  |  |  \-[IDENT] Node: 'testCases'
    |  |  |  \-[ALIAS] Node: 'tcs'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'tcs'
    |  |     |  \-[IDENT] Node: 'run_TestCase_TestResults'
    |  |     \-[ALIAS] Node: 'trr'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'testsuite'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'trr'
          |  |  \-[IDENT] Node: 'run'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'runId'

[2015-08-17 19:20:06,754]DEBUG  4792[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121) - select << begin [level=1, statement=select]
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestSuite (testsuite) -> testsuite0_
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testsuite -> testsuite0_.id
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCases -> org.hibernate.type.BagType(com.test.domain.TestSuite.testCases)
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElementFactory.createEntityAssociation(FromElementFactory.java:405) - createEntityAssociation() : One to many - path = testsuite.testCases role = com.test.domain.TestSuite.testCases associatedEntityName = com.test.domain.TestCase
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestCase (tcs) -> testcases1_
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : testsuite.testCases -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tcs,role=null,tableName=TestCase,tableAlias=testcases1_,origin=TestSuite testsuite0_,columns={testsuite0_.id ,className=com.test.domain.TestCase}}
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceCollection(DotNode.java:351) - dereferenceCollection() : Created new FROM element for testsuite.testCases : TestCase testcases1_
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testsuite.testCases -> .
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'TestCase testcases1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tcs,role=com.test.domain.TestSuite.testCases,tableName=TestCase,tableAlias=testcases1_,origin=TestSuite testsuite0_,columns={testsuite0_.id ,className=com.test.domain.TestCase}}

[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tcs -> testcases1_.id
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run_TestCase_TestResults -> org.hibernate.type.BagType(com.test.domain.TestCase.run_TestCase_TestResults)
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElementFactory.createEntityAssociation(FromElementFactory.java:405) - createEntityAssociation() : One to many - path = tcs.run_TestCase_TestResults role = com.test.domain.TestCase.run_TestCase_TestResults associatedEntityName = com.test.domain.Run_TestCase_TestResult
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run_TestCase_TestResult (trr) -> run_testca2_
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : tcs.run_TestCase_TestResults -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=trr,role=null,tableName=Run_TestCase_TestResult,tableAlias=run_testca2_,origin=TestCase testcases1_,columns={testcases1_.id ,className=com.test.domain.Run_TestCase_TestResult}}
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceCollection(DotNode.java:351) - dereferenceCollection() : Created new FROM element for tcs.run_TestCase_TestResults : Run_TestCase_TestResult run_testca2_
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tcs.run_TestCase_TestResults -> .
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Run_TestCase_TestResult run_testca2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=trr,role=com.test.domain.TestCase.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca2_,origin=TestCase testcases1_,columns={testcases1_.id ,className=com.test.domain.Run_TestCase_TestResult}}

[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testsuite -> testsuite0_.id
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : trr -> run_testca2_.id
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run -> org.hibernate.type.ManyToOneType(com.test.domain.Run)
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run_TestCase_TestResult does not require a join.
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'run.id'
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : trr.run -> run_testca2_.run_id
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run.id -> org.hibernate.type.LongType@4d290165
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : trr.run.id -> run_testca2_.run_id
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125) - select : finishing up [level=1, statement=select]
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:671) - processQuery() :  ( SELECT ( {select clause} distinct testsuite0_.id ) ( FromClause{level=1} ( TestSuite testsuite0_ ( TestCase testcases1_ Run_TestCase_TestResult run_testca2_ ) ) ) ( where ( = ( run_testca2_.run_id ( run_testca2_.run_id run_testca2_.id run ) id ) ? ) ) )
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [TestSuite testsuite0_]
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id]
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join Run_TestCase_TestResult run_testca2_ on testcases1_.id=run_testca2_.testCase_id]
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129) - select >> end [level=1, statement=select]
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:281) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TestSuite,TestCase,Run_TestCase_TestResult)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'testsuite0_.id as id1_8_' {alias=testsuite, className=com.test.domain.TestSuite, tableAlias=testsuite0_}
    |  \-[SQL_TOKEN] SqlFragment: 'testsuite0_.name as name2_8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[testsuite, tcs, trr], fromElementByTableAlias=[run_testca2_, testsuite0_, testcases1_], fromElementsByPath=[tcs.run_TestCase_TestResults, testsuite.testCases], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TestSuite testsuite0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=testsuite,role=null,tableName=TestSuite,tableAlias=testsuite0_,origin=null,columns={,className=com.test.domain.TestSuite}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tcs,role=com.test.domain.TestSuite.testCases,tableName=TestCase,tableAlias=testcases1_,origin=TestSuite testsuite0_,columns={testsuite0_.id ,className=com.test.domain.TestCase}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join Run_TestCase_TestResult run_testca2_ on testcases1_.id=run_testca2_.testCase_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=trr,role=com.test.domain.TestCase.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca2_,origin=inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id,columns={testcases1_.id ,className=com.test.domain.Run_TestCase_TestResult}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'run_testca2_.run_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=run.id,path=trr.run.id,tableAlias=run_testca2_,className=com.test.domain.Run_TestCase_TestResult,classAlias=trr}
          |  +-[DOT] DotNode: 'run_testca2_.run_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=run.id,path=trr.run,tableAlias=run_testca2_,className=com.test.domain.Run_TestCase_TestResult,classAlias=trr}
          |  |  +-[ALIAS_REF] IdentNode: 'run_testca2_.id' {alias=trr, className=com.test.domain.Run_TestCase_TestResult, tableAlias=run_testca2_}
          |  |  \-[IDENT] IdentNode: 'run' {originalText=run}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=runId, expectedType=org.hibernate.type.LongType@4d290165}

[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: select distinct testsuite from com.test.domain.TestSuite testsuite join testsuite.testCases tcs join tcs.run_TestCase_TestResults trr where trr.run.id = :runId
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select distinct testsuite0_.id as id1_8_, testsuite0_.name as name2_8_ from TestSuite testsuite0_ inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id inner join Run_TestCase_TestResult run_testca2_ on testcases1_.id=run_testca2_.testCase_id where run_testca2_.run_id=?
[2015-08-17 19:20:06,764]DEBUG  4802[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByName
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:119) - Looking up named query TestSuite.findByName
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.hibernate.jpa.spi.AbstractEntityManagerImpl.markForRollbackOnly(AbstractEntityManagerImpl.java:1529) - Mark transaction for rollback
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:102) - Did not find named query TestSuite.findByName
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,774]DEBUG  4812[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@356816c5]
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testSuiteDao'
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'testSuiteDao'
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.service.TestSuiteService com.test.service.impl.TestCaseServiceImpl.testSuiteService
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testSuiteService'
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testSuiteService'
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestSuiteServiceImpl]: AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestSuiteServiceImpl.testSuiteDao
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestSuiteServiceImpl]: AutowiredFieldElement for private com.test.service.RunService com.test.service.impl.TestSuiteServiceImpl.runService
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestSuiteServiceImpl]: AutowiredFieldElement for private com.test.dao.RunDao com.test.service.impl.TestSuiteServiceImpl.runDao
[2015-08-17 19:20:06,775]DEBUG  4813[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testSuiteService' to allow for resolving potential circular references
[2015-08-17 19:20:06,777]DEBUG  4815[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteService': AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestSuiteServiceImpl.testSuiteDao
[2015-08-17 19:20:06,777]DEBUG  4815[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testSuiteDao'
[2015-08-17 19:20:06,777]DEBUG  4815[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testSuiteService' to bean named 'testSuiteDao'
[2015-08-17 19:20:06,777]DEBUG  4815[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteService': AutowiredFieldElement for private com.test.service.RunService com.test.service.impl.TestSuiteServiceImpl.runService
[2015-08-17 19:20:06,778]DEBUG  4816[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runService'
[2015-08-17 19:20:06,778]DEBUG  4816[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testSuiteService' to bean named 'runService'
[2015-08-17 19:20:06,778]DEBUG  4816[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteService': AutowiredFieldElement for private com.test.dao.RunDao com.test.service.impl.TestSuiteServiceImpl.runDao
[2015-08-17 19:20:06,778]DEBUG  4816[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runDao'
[2015-08-17 19:20:06,779]DEBUG  4817[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testSuiteService' to bean named 'runDao'
[2015-08-17 19:20:06,779]DEBUG  4817[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,780]DEBUG  4818[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'TestSuiteServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-08-17 19:20:06,780]DEBUG  4818[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'testSuiteService' with 0 common interceptors and 1 specific interceptors
[2015-08-17 19:20:06,780]DEBUG  4818[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.TestSuiteServiceImpl@51ff73d5]
[2015-08-17 19:20:06,782]DEBUG  4820[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testSuiteService'
[2015-08-17 19:20:06,783]DEBUG  4821[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'testSuiteService'
[2015-08-17 19:20:06,783]DEBUG  4821[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.impl.TestCaseServiceImpl.run_TestCase_TestResultDao
[2015-08-17 19:20:06,783]DEBUG  4821[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'env_TestCase_TestResultDao'
[2015-08-17 19:20:06,783]DEBUG  4821[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'env_TestCase_TestResultDao'
[2015-08-17 19:20:06,783]DEBUG  4821[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,784]DEBUG  4822[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'TestCaseServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-08-17 19:20:06,784]DEBUG  4822[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'testCaseService' with 0 common interceptors and 1 specific interceptors
[2015-08-17 19:20:06,784]DEBUG  4822[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.TestCaseServiceImpl@7b964f8b]
[2015-08-17 19:20:06,786]DEBUG  4824[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testCaseService'
[2015-08-17 19:20:06,786]DEBUG  4824[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testResultService'
[2015-08-17 19:20:06,787]DEBUG  4825[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testResultService'
[2015-08-17 19:20:06,787]DEBUG  4825[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestResultServiceImpl]: AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.impl.TestResultServiceImpl.testResultDao
[2015-08-17 19:20:06,787]DEBUG  4825[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testResultService' to allow for resolving potential circular references
[2015-08-17 19:20:06,789]DEBUG  4827[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testResultService': AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.impl.TestResultServiceImpl.testResultDao
[2015-08-17 19:20:06,790]DEBUG  4828[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testResultDao'
[2015-08-17 19:20:06,790]DEBUG  4828[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testResultService' to bean named 'testResultDao'
[2015-08-17 19:20:06,790]DEBUG  4828[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,790]DEBUG  4828[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'TestResultServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-08-17 19:20:06,791]DEBUG  4829[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'testResultService' with 0 common interceptors and 1 specific interceptors
[2015-08-17 19:20:06,791]DEBUG  4829[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.TestResultServiceImpl@7c43ca57]
[2015-08-17 19:20:06,793]DEBUG  4831[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testResultService'
[2015-08-17 19:20:06,793]DEBUG  4831[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testSuiteService'
[2015-08-17 19:20:06,794]DEBUG  4832[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'initDBService'
[2015-08-17 19:20:06,794]DEBUG  4832[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'initDBService'
[2015-08-17 19:20:06,795]DEBUG  4833[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.InitDBService.run_TestCase_TestResultDao
[2015-08-17 19:20:06,795]DEBUG  4833[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.EnvironmentDao com.test.service.InitDBService.environmentDao
[2015-08-17 19:20:06,795]DEBUG  4833[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.BranchDao com.test.service.InitDBService.branchDao
[2015-08-17 19:20:06,795]DEBUG  4833[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.BuildDao com.test.service.InitDBService.buildDao
[2015-08-17 19:20:06,795]DEBUG  4833[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.InitDBService.testCaseDao
[2015-08-17 19:20:06,795]DEBUG  4833[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.InitDBService.testResultDao
[2015-08-17 19:20:06,795]DEBUG  4833[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.RunDao com.test.service.InitDBService.runDao
[2015-08-17 19:20:06,795]DEBUG  4833[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.InitDBService.testSuiteDao
[2015-08-17 19:20:06,796]DEBUG  4834[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'initDBService' to allow for resolving potential circular references
[2015-08-17 19:20:06,798]DEBUG  4836[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.InitDBService.run_TestCase_TestResultDao
[2015-08-17 19:20:06,798]DEBUG  4836[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'env_TestCase_TestResultDao'
[2015-08-17 19:20:06,798]DEBUG  4836[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'env_TestCase_TestResultDao'
[2015-08-17 19:20:06,798]DEBUG  4836[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.EnvironmentDao com.test.service.InitDBService.environmentDao
[2015-08-17 19:20:06,798]DEBUG  4836[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'environmentDao'
[2015-08-17 19:20:06,799]DEBUG  4837[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'environmentDao'
[2015-08-17 19:20:06,799]DEBUG  4837[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.BranchDao com.test.service.InitDBService.branchDao
[2015-08-17 19:20:06,799]DEBUG  4837[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'branchDao'
[2015-08-17 19:20:06,799]DEBUG  4837[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'branchDao'
[2015-08-17 19:20:06,799]DEBUG  4837[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.BuildDao com.test.service.InitDBService.buildDao
[2015-08-17 19:20:06,799]DEBUG  4837[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'buildDao'
[2015-08-17 19:20:06,800]DEBUG  4838[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'buildDao'
[2015-08-17 19:20:06,800]DEBUG  4838[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.InitDBService.testCaseDao
[2015-08-17 19:20:06,800]DEBUG  4838[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testCaseDao'
[2015-08-17 19:20:06,800]DEBUG  4838[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'testCaseDao'
[2015-08-17 19:20:06,800]DEBUG  4838[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.InitDBService.testResultDao
[2015-08-17 19:20:06,800]DEBUG  4838[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testResultDao'
[2015-08-17 19:20:06,801]DEBUG  4839[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'testResultDao'
[2015-08-17 19:20:06,801]DEBUG  4839[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.RunDao com.test.service.InitDBService.runDao
[2015-08-17 19:20:06,801]DEBUG  4839[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runDao'
[2015-08-17 19:20:06,801]DEBUG  4839[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'runDao'
[2015-08-17 19:20:06,801]DEBUG  4839[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.InitDBService.testSuiteDao
[2015-08-17 19:20:06,802]DEBUG  4840[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testSuiteDao'
[2015-08-17 19:20:06,802]DEBUG  4840[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'testSuiteDao'
[2015-08-17 19:20:06,802]DEBUG  4840[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,802]DEBUG  4840[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'InitDBService.init' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-08-17 19:20:06,802]DEBUG  4840[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'initDBService' with 0 common interceptors and 1 specific interceptors
[2015-08-17 19:20:06,810]DEBUG  4848[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.test.service.InitDBService@274bc9d2]
[2015-08-17 19:20:06,871]DEBUG  4909[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-08-17 19:20:06,871]DEBUG  4909[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-08-17 19:20:06,873]DEBUG  4911[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2015-08-17 19:20:06,878]DEBUG  4916[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-08-17 19:20:06,878]DEBUG  4916[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-08-17 19:20:06,878]DEBUG  4916[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-08-17 19:20:06,882]DEBUG  4920[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831) - Unable to apply any optimisations to advised method: public void com.test.service.InitDBService.init()
[2015-08-17 19:20:06,882]DEBUG  4920[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'InitDBService.createRun' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-08-17 19:20:06,882]DEBUG  4920[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831) - Unable to apply any optimisations to advised method: public void com.test.service.InitDBService.createRun()
[2015-08-17 19:20:06,882]DEBUG  4920[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:782) - Found finalize() method - using NO_OVERRIDE
[2015-08-17 19:20:06,883]DEBUG  4921[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:794) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-08-17 19:20:06,883]DEBUG  4921[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-08-17 19:20:06,883]DEBUG  4921[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:799) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-08-17 19:20:06,883]DEBUG  4921[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-08-17 19:20:06,883]DEBUG  4921[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-08-17 19:20:06,884]DEBUG  4922[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-08-17 19:20:06,886]DEBUG  4924[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-08-17 19:20:06,886]DEBUG  4924[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-08-17 19:20:06,887]DEBUG  4925[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-08-17 19:20:06,887]DEBUG  4925[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-08-17 19:20:06,887]DEBUG  4925[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-08-17 19:20:06,888]DEBUG  4926[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-08-17 19:20:06,888]DEBUG  4926[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-08-17 19:20:06,888]DEBUG  4926[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-08-17 19:20:06,889]DEBUG  4927[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-08-17 19:20:06,889]DEBUG  4927[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-08-17 19:20:06,889]DEBUG  4927[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-08-17 19:20:06,890]DEBUG  4928[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-08-17 19:20:06,890]DEBUG  4928[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-08-17 19:20:06,891]DEBUG  4929[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-08-17 19:20:06,897]DEBUG  4935[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-08-17 19:20:06,898]DEBUG  4936[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-08-17 19:20:06,898]DEBUG  4936[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-08-17 19:20:06,898]DEBUG  4936[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-08-17 19:20:06,898]DEBUG  4936[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-08-17 19:20:06,898]DEBUG  4936[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-08-17 19:20:06,898]DEBUG  4936[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-08-17 19:20:06,933]DEBUG  4971[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'initDBService'
[2015-08-17 19:20:06,933]DEBUG  4971[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-08-17 19:20:06,933]DEBUG  4971[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-08-17 19:20:06,933]DEBUG  4971[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-08-17 19:20:06,933]DEBUG  4971[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-08-17 19:20:06,933]DEBUG  4971[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-08-17 19:20:06,933]DEBUG  4971[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'dataSource'
[2015-08-17 19:20:06,934]DEBUG  4972[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'entityManagerFactory'
[2015-08-17 19:20:06,934]DEBUG  4972[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-08-17 19:20:06,934]DEBUG  4972[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-08-17 19:20:06,934]DEBUG  4972[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-08-17 19:20:06,934]DEBUG  4972[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,934]DEBUG  4972[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'transactionManager'
[2015-08-17 19:20:06,935]DEBUG  4973[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'transactionManager'
[2015-08-17 19:20:06,941]DEBUG  4979[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[2015-08-17 19:20:06,946]DEBUG  4984[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'dataSource'
[2015-08-17 19:20:06,947]DEBUG  4985[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'entityManagerFactory'
[2015-08-17 19:20:06,947]DEBUG  4985[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2015-08-17 19:20:06,948]DEBUG  4986[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-17 19:20:06,948]DEBUG  4986[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'transactionManager'
[2015-08-17 19:20:06,948]DEBUG  4986[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
[2015-08-17 19:20:06,948]DEBUG  4986[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'foo'
[2015-08-17 19:20:06,948]DEBUG  4986[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'jpaMappingContext'
[2015-08-17 19:20:06,949]DEBUG  4987[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'buildDao'
[2015-08-17 19:20:06,949]DEBUG  4987[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testResultDao'
[2015-08-17 19:20:06,949]DEBUG  4987[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runDao'
[2015-08-17 19:20:06,949]DEBUG  4987[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testSuiteDao'
[2015-08-17 19:20:06,949]DEBUG  4987[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'env_TestCase_TestResultDao'
[2015-08-17 19:20:06,949]DEBUG  4987[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'branchDao'
[2015-08-17 19:20:06,949]DEBUG  4987[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'environmentDao'
[2015-08-17 19:20:06,949]DEBUG  4987[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testCaseDao'
[2015-08-17 19:20:06,949]DEBUG  4987[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
