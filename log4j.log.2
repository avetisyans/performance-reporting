[2015-07-24 18:22:28,252]DEBUG  4265[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,253]DEBUG  4266[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,253]DEBUG  4266[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,254]DEBUG  4267[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,254]DEBUG  4267[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,255]DEBUG  4268[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,256]DEBUG  4269[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,257]DEBUG  4270[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,258]DEBUG  4271[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,258]DEBUG  4271[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,258]DEBUG  4271[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,258]DEBUG  4271[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,259]DEBUG  4272[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,260]DEBUG  4273[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,260]DEBUG  4273[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,261]DEBUG  4274[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,261]DEBUG  4274[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,262]DEBUG  4275[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource@62d028f3
[2015-07-24 18:22:28,264]DEBUG  4277[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByTestCaseAndRun
[2015-07-24 18:22:28,266]DEBUG  4279[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:294) - parse() - HQL: select testresult from com.test.domain.TestResult testresult join testresult.run_TestCase_TestResults rtt join rtt.testCase tc where tc.id = :testCaseId and rtt.run.id = :runId
[2015-07-24 18:22:28,276]DEBUG  4289[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:312) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'TestResult'
    |  |  |  \-[ALIAS] Node: 'testresult'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'testresult'
    |  |  |  |  \-[IDENT] Node: 'run_TestCase_TestResults'
    |  |  |  \-[ALIAS] Node: 'rtt'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'rtt'
    |  |     |  \-[IDENT] Node: 'testCase'
    |  |     \-[ALIAS] Node: 'tc'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'testresult'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'tc'
          |  |  \-[IDENT] Node: 'id'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'testCaseId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'rtt'
             |  |  \-[IDENT] Node: 'run'
             |  \-[IDENT] Node: 'id'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'runId'

[2015-07-24 18:22:28,277]DEBUG  4290[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-07-24 18:22:28,277]DEBUG  4290[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121) - select << begin [level=1, statement=select]
[2015-07-24 18:22:28,278]DEBUG  4291[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestResult (testresult) -> testresult0_
[2015-07-24 18:22:28,278]DEBUG  4291[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testresult -> testresult0_.id
[2015-07-24 18:22:28,278]DEBUG  4291[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run_TestCase_TestResults -> org.hibernate.type.OneToOneType(com.test.domain.Run_TestCase_TestResult)
[2015-07-24 18:22:28,279]DEBUG  4292[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for run_TestCase_TestResults in com.test.domain.TestResult (rtt) parent = [ {null} ]
[2015-07-24 18:22:28,279]DEBUG  4292[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run_TestCase_TestResult (rtt) -> run_testca1_
[2015-07-24 18:22:28,279]DEBUG  4292[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : testresult.run_TestCase_TestResults -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rtt,role=null,tableName=Run_TestCase_TestResult,tableAlias=run_testca1_,origin=TestResult testresult0_,columns={testresult0_.id ,className=com.test.domain.Run_TestCase_TestResult}}
[2015-07-24 18:22:28,279]DEBUG  4292[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testresult.run_TestCase_TestResults -> testresult0_.id
[2015-07-24 18:22:28,280]DEBUG  4293[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Run_TestCase_TestResult run_testca1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rtt,role=com.test.domain.TestResult.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca1_,origin=TestResult testresult0_,columns={testresult0_.id ,className=com.test.domain.Run_TestCase_TestResult}}

[2015-07-24 18:22:28,280]DEBUG  4293[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca1_.id
[2015-07-24 18:22:28,280]DEBUG  4293[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCase -> org.hibernate.type.ManyToOneType(com.test.domain.TestCase)
[2015-07-24 18:22:28,280]DEBUG  4293[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for testCase in com.test.domain.Run_TestCase_TestResult (tc) parent = [ {null} ]
[2015-07-24 18:22:28,281]DEBUG  4294[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestCase (tc) -> testcase2_
[2015-07-24 18:22:28,281]DEBUG  4294[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : rtt.testCase -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tc,role=null,tableName=TestCase,tableAlias=testcase2_,origin=Run_TestCase_TestResult run_testca1_,columns={run_testca1_.testCase_id ,className=com.test.domain.TestCase}}
[2015-07-24 18:22:28,283]DEBUG  4296[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testCase -> run_testca1_.testCase_id
[2015-07-24 18:22:28,283]DEBUG  4296[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'TestCase testcase2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tc,role=com.test.domain.Run_TestCase_TestResult.testCase,tableName=TestCase,tableAlias=testcase2_,origin=Run_TestCase_TestResult run_testca1_,columns={run_testca1_.testCase_id ,className=com.test.domain.TestCase}}

[2015-07-24 18:22:28,284]DEBUG  4297[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testresult -> testresult0_.id
[2015-07-24 18:22:28,285]DEBUG  4298[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tc -> testcase2_.id
[2015-07-24 18:22:28,285]DEBUG  4298[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : id -> org.hibernate.type.LongType@38676631
[2015-07-24 18:22:28,285]DEBUG  4298[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tc.id -> testcase2_.id
[2015-07-24 18:22:28,285]DEBUG  4298[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca1_.id
[2015-07-24 18:22:28,286]DEBUG  4299[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run -> org.hibernate.type.ManyToOneType(com.test.domain.Run)
[2015-07-24 18:22:28,286]DEBUG  4299[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run_TestCase_TestResult does not require a join.
[2015-07-24 18:22:28,286]DEBUG  4299[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'run.id'
[2015-07-24 18:22:28,286]DEBUG  4299[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.run -> run_testca1_.run_id
[2015-07-24 18:22:28,287]DEBUG  4300[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run.id -> org.hibernate.type.LongType@38676631
[2015-07-24 18:22:28,287]DEBUG  4300[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.run.id -> run_testca1_.run_id
[2015-07-24 18:22:28,287]DEBUG  4300[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125) - select : finishing up [level=1, statement=select]
[2015-07-24 18:22:28,287]DEBUG  4300[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:671) - processQuery() :  ( SELECT ( {select clause} testresult0_.id ) ( FromClause{level=1} ( TestResult testresult0_ ( Run_TestCase_TestResult run_testca1_ TestCase testcase2_ ) ) ) ( where ( and ( = ( testcase2_.id testcase2_.id id ) ? ) ( = ( run_testca1_.run_id ( run_testca1_.run_id run_testca1_.id run ) id ) ? ) ) ) )
[2015-07-24 18:22:28,289]DEBUG  4302[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [TestResult testresult0_]
[2015-07-24 18:22:28,289]DEBUG  4302[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join Run_TestCase_TestResult run_testca1_ on testresult0_.id=run_testca1_.testResult_id]
[2015-07-24 18:22:28,290]DEBUG  4303[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join TestCase testcase2_ on run_testca1_.testCase_id=testcase2_.id]
[2015-07-24 18:22:28,291]DEBUG  4304[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129) - select >> end [level=1, statement=select]
[2015-07-24 18:22:28,291]DEBUG  4304[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:281) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TestCase,TestResult,Run_TestCase_TestResult)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'testresult0_.id as id1_7_' {alias=testresult, className=com.test.domain.TestResult, tableAlias=testresult0_}
    |  \-[SQL_TOKEN] SqlFragment: 'testresult0_.endTime as endTime2_7_, testresult0_.result as result3_7_, testresult0_.startTime as startTim4_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[testresult, rtt, tc], fromElementByTableAlias=[testcase2_, run_testca1_, testresult0_], fromElementsByPath=[rtt.testCase, testresult.run_TestCase_TestResults], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TestResult testresult0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=testresult,role=null,tableName=TestResult,tableAlias=testresult0_,origin=null,columns={,className=com.test.domain.TestResult}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join Run_TestCase_TestResult run_testca1_ on testresult0_.id=run_testca1_.testResult_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rtt,role=com.test.domain.TestResult.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca1_,origin=TestResult testresult0_,columns={testresult0_.id ,className=com.test.domain.Run_TestCase_TestResult}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join TestCase testcase2_ on run_testca1_.testCase_id=testcase2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tc,role=com.test.domain.Run_TestCase_TestResult.testCase,tableName=TestCase,tableAlias=testcase2_,origin=inner join Run_TestCase_TestResult run_testca1_ on testresult0_.id=run_testca1_.testResult_id,columns={run_testca1_.testCase_id ,className=com.test.domain.TestCase}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'testcase2_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=tc.id,tableAlias=testcase2_,className=com.test.domain.TestCase,classAlias=tc}
          |  |  +-[ALIAS_REF] IdentNode: 'testcase2_.id' {alias=tc, className=com.test.domain.TestCase, tableAlias=testcase2_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=testCaseId, expectedType=org.hibernate.type.LongType@38676631}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'run_testca1_.run_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=run.id,path=rtt.run.id,tableAlias=run_testca1_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
             |  +-[DOT] DotNode: 'run_testca1_.run_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=run.id,path=rtt.run,tableAlias=run_testca1_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
             |  |  +-[ALIAS_REF] IdentNode: 'run_testca1_.id' {alias=rtt, className=com.test.domain.Run_TestCase_TestResult, tableAlias=run_testca1_}
             |  |  \-[IDENT] IdentNode: 'run' {originalText=run}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[NAMED_PARAM] ParameterNode: '?' {name=runId, expectedType=org.hibernate.type.LongType@38676631}

[2015-07-24 18:22:28,292]DEBUG  4305[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-07-24 18:22:28,292]DEBUG  4305[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: select testresult from com.test.domain.TestResult testresult join testresult.run_TestCase_TestResults rtt join rtt.testCase tc where tc.id = :testCaseId and rtt.run.id = :runId
[2015-07-24 18:22:28,292]DEBUG  4305[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select testresult0_.id as id1_7_, testresult0_.endTime as endTime2_7_, testresult0_.result as result3_7_, testresult0_.startTime as startTim4_7_ from TestResult testresult0_ inner join Run_TestCase_TestResult run_testca1_ on testresult0_.id=run_testca1_.testResult_id inner join TestCase testcase2_ on run_testca1_.testCase_id=testcase2_.id where testcase2_.id=? and run_testca1_.run_id=?
[2015-07-24 18:22:28,292]DEBUG  4305[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-07-24 18:22:28,294]DEBUG  4307[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@7fe4902a]
[2015-07-24 18:22:28,297]DEBUG  4310[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,297]DEBUG  4310[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testResultDao'
[2015-07-24 18:22:28,298]DEBUG  4311[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,299]DEBUG  4312[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'run_TestCase_TestResultService' to bean named 'testResultDao'
[2015-07-24 18:22:28,299]DEBUG  4312[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,299]DEBUG  4312[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'Run_TestCase_TestResultServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-07-24 18:22:28,299]DEBUG  4312[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'run_TestCase_TestResultService' with 0 common interceptors and 1 specific interceptors
[2015-07-24 18:22:28,299]DEBUG  4312[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.Run_TestCase_TestResultServiceImpl@3764912e]
[2015-07-24 18:22:28,301]DEBUG  4314[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'run_TestCase_TestResultService'
[2015-07-24 18:22:28,301]DEBUG  4314[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testCaseService'
[2015-07-24 18:22:28,302]DEBUG  4315[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testCaseService'
[2015-07-24 18:22:28,302]DEBUG  4315[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.impl.TestCaseServiceImpl.testCaseDao
[2015-07-24 18:22:28,302]DEBUG  4315[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestCaseServiceImpl.testSuiteDao
[2015-07-24 18:22:28,302]DEBUG  4315[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.service.TestSuiteService com.test.service.impl.TestCaseServiceImpl.testSuiteService
[2015-07-24 18:22:28,303]DEBUG  4316[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.impl.TestCaseServiceImpl.run_TestCase_TestResultDao
[2015-07-24 18:22:28,303]DEBUG  4316[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testCaseService' to allow for resolving potential circular references
[2015-07-24 18:22:28,305]DEBUG  4318[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.impl.TestCaseServiceImpl.testCaseDao
[2015-07-24 18:22:28,305]DEBUG  4318[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testCaseDao'
[2015-07-24 18:22:28,305]DEBUG  4318[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'testCaseDao'
[2015-07-24 18:22:28,305]DEBUG  4318[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestCaseServiceImpl.testSuiteDao
[2015-07-24 18:22:28,306]DEBUG  4319[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testSuiteDao'
[2015-07-24 18:22:28,306]DEBUG  4319[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testSuiteDao'
[2015-07-24 18:22:28,306]DEBUG  4319[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
[2015-07-24 18:22:28,307]DEBUG  4320[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testSuiteDao' to allow for resolving potential circular references
[2015-07-24 18:22:28,307]DEBUG  4320[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteDao': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
[2015-07-24 18:22:28,307]DEBUG  4320[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#65956c37'
[2015-07-24 18:22:28,307]DEBUG  4320[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#487ed0ca'
[2015-07-24 18:22:28,308]DEBUG  4321[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name '(inner bean)#487ed0ca'
[2015-07-24 18:22:28,308]DEBUG  4321[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,309]DEBUG  4322[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#487ed0ca'
[2015-07-24 18:22:28,309]DEBUG  4322[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,309]DEBUG  4322[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,309]DEBUG  4322[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#65956c37'
[2015-07-24 18:22:28,310]DEBUG  4323[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#9bd0308'
[2015-07-24 18:22:28,310]DEBUG  4323[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,310]DEBUG  4323[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#9bd0308'
[2015-07-24 18:22:28,310]DEBUG  4323[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#470722dc'
[2015-07-24 18:22:28,311]DEBUG  4324[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'entityManagerFactory'
[2015-07-24 18:22:28,312]DEBUG  4325[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,312]DEBUG  4325[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#470722dc'
[2015-07-24 18:22:28,312]DEBUG  4325[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'jpaMappingContext'
[2015-07-24 18:22:28,312]DEBUG  4325[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name 'testSuiteDao'
[2015-07-24 18:22:28,313]DEBUG  4326[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,313]DEBUG  4326[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,313]DEBUG  4326[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,314]DEBUG  4327[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,314]DEBUG  4327[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,314]DEBUG  4327[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,315]DEBUG  4328[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,315]DEBUG  4328[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,316]DEBUG  4329[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,317]DEBUG  4330[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,318]DEBUG  4331[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,318]DEBUG  4331[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,319]DEBUG  4332[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,319]DEBUG  4332[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,319]DEBUG  4332[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,319]DEBUG  4332[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,320]DEBUG  4333[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,320]DEBUG  4333[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,321]DEBUG  4334[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,322]DEBUG  4335[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,322]DEBUG  4335[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource@5c2890f6
[2015-07-24 18:22:28,323]DEBUG  4336[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByRun
[2015-07-24 18:22:28,324]DEBUG  4337[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:294) - parse() - HQL: select distinct testsuite from com.test.domain.TestSuite testsuite join testsuite.testCases tcs join tcs.run_TestCase_TestResults trr where trr.run.id = :runId
[2015-07-24 18:22:28,328]DEBUG  4341[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:312) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'TestSuite'
    |  |  |  \-[ALIAS] Node: 'testsuite'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'testsuite'
    |  |  |  |  \-[IDENT] Node: 'testCases'
    |  |  |  \-[ALIAS] Node: 'tcs'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'tcs'
    |  |     |  \-[IDENT] Node: 'run_TestCase_TestResults'
    |  |     \-[ALIAS] Node: 'trr'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'testsuite'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'trr'
          |  |  \-[IDENT] Node: 'run'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'runId'

[2015-07-24 18:22:28,328]DEBUG  4341[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-07-24 18:22:28,328]DEBUG  4341[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121) - select << begin [level=1, statement=select]
[2015-07-24 18:22:28,329]DEBUG  4342[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestSuite (testsuite) -> testsuite0_
[2015-07-24 18:22:28,329]DEBUG  4342[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testsuite -> testsuite0_.id
[2015-07-24 18:22:28,329]DEBUG  4342[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCases -> org.hibernate.type.BagType(com.test.domain.TestSuite.testCases)
[2015-07-24 18:22:28,330]DEBUG  4343[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElementFactory.createEntityAssociation(FromElementFactory.java:405) - createEntityAssociation() : One to many - path = testsuite.testCases role = com.test.domain.TestSuite.testCases associatedEntityName = com.test.domain.TestCase
[2015-07-24 18:22:28,330]DEBUG  4343[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestCase (tcs) -> testcases1_
[2015-07-24 18:22:28,330]DEBUG  4343[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : testsuite.testCases -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tcs,role=null,tableName=TestCase,tableAlias=testcases1_,origin=TestSuite testsuite0_,columns={testsuite0_.id ,className=com.test.domain.TestCase}}
[2015-07-24 18:22:28,330]DEBUG  4343[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceCollection(DotNode.java:351) - dereferenceCollection() : Created new FROM element for testsuite.testCases : TestCase testcases1_
[2015-07-24 18:22:28,331]DEBUG  4344[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testsuite.testCases -> .
[2015-07-24 18:22:28,331]DEBUG  4344[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'TestCase testcases1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tcs,role=com.test.domain.TestSuite.testCases,tableName=TestCase,tableAlias=testcases1_,origin=TestSuite testsuite0_,columns={testsuite0_.id ,className=com.test.domain.TestCase}}

[2015-07-24 18:22:28,331]DEBUG  4344[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tcs -> testcases1_.id
[2015-07-24 18:22:28,331]DEBUG  4344[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run_TestCase_TestResults -> org.hibernate.type.BagType(com.test.domain.TestCase.run_TestCase_TestResults)
[2015-07-24 18:22:28,332]DEBUG  4345[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElementFactory.createEntityAssociation(FromElementFactory.java:405) - createEntityAssociation() : One to many - path = tcs.run_TestCase_TestResults role = com.test.domain.TestCase.run_TestCase_TestResults associatedEntityName = com.test.domain.Run_TestCase_TestResult
[2015-07-24 18:22:28,332]DEBUG  4345[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run_TestCase_TestResult (trr) -> run_testca2_
[2015-07-24 18:22:28,332]DEBUG  4345[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : tcs.run_TestCase_TestResults -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=trr,role=null,tableName=Run_TestCase_TestResult,tableAlias=run_testca2_,origin=TestCase testcases1_,columns={testcases1_.id ,className=com.test.domain.Run_TestCase_TestResult}}
[2015-07-24 18:22:28,332]DEBUG  4345[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceCollection(DotNode.java:351) - dereferenceCollection() : Created new FROM element for tcs.run_TestCase_TestResults : Run_TestCase_TestResult run_testca2_
[2015-07-24 18:22:28,333]DEBUG  4346[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tcs.run_TestCase_TestResults -> .
[2015-07-24 18:22:28,333]DEBUG  4346[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Run_TestCase_TestResult run_testca2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=trr,role=com.test.domain.TestCase.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca2_,origin=TestCase testcases1_,columns={testcases1_.id ,className=com.test.domain.Run_TestCase_TestResult}}

[2015-07-24 18:22:28,333]DEBUG  4346[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testsuite -> testsuite0_.id
[2015-07-24 18:22:28,333]DEBUG  4346[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : trr -> run_testca2_.id
[2015-07-24 18:22:28,334]DEBUG  4347[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run -> org.hibernate.type.ManyToOneType(com.test.domain.Run)
[2015-07-24 18:22:28,334]DEBUG  4347[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run_TestCase_TestResult does not require a join.
[2015-07-24 18:22:28,334]DEBUG  4347[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'run.id'
[2015-07-24 18:22:28,334]DEBUG  4347[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : trr.run -> run_testca2_.run_id
[2015-07-24 18:22:28,335]DEBUG  4348[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run.id -> org.hibernate.type.LongType@38676631
[2015-07-24 18:22:28,335]DEBUG  4348[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : trr.run.id -> run_testca2_.run_id
[2015-07-24 18:22:28,335]DEBUG  4348[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125) - select : finishing up [level=1, statement=select]
[2015-07-24 18:22:28,335]DEBUG  4348[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:671) - processQuery() :  ( SELECT ( {select clause} distinct testsuite0_.id ) ( FromClause{level=1} ( TestSuite testsuite0_ ( TestCase testcases1_ Run_TestCase_TestResult run_testca2_ ) ) ) ( where ( = ( run_testca2_.run_id ( run_testca2_.run_id run_testca2_.id run ) id ) ? ) ) )
[2015-07-24 18:22:28,336]DEBUG  4349[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [TestSuite testsuite0_]
[2015-07-24 18:22:28,336]DEBUG  4349[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id]
[2015-07-24 18:22:28,336]DEBUG  4349[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join Run_TestCase_TestResult run_testca2_ on testcases1_.id=run_testca2_.testCase_id]
[2015-07-24 18:22:28,336]DEBUG  4349[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129) - select >> end [level=1, statement=select]
[2015-07-24 18:22:28,337]DEBUG  4350[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:281) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TestSuite,TestCase,Run_TestCase_TestResult)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'testsuite0_.id as id1_8_' {alias=testsuite, className=com.test.domain.TestSuite, tableAlias=testsuite0_}
    |  \-[SQL_TOKEN] SqlFragment: 'testsuite0_.name as name2_8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[testsuite, tcs, trr], fromElementByTableAlias=[run_testca2_, testsuite0_, testcases1_], fromElementsByPath=[tcs.run_TestCase_TestResults, testsuite.testCases], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TestSuite testsuite0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=testsuite,role=null,tableName=TestSuite,tableAlias=testsuite0_,origin=null,columns={,className=com.test.domain.TestSuite}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tcs,role=com.test.domain.TestSuite.testCases,tableName=TestCase,tableAlias=testcases1_,origin=TestSuite testsuite0_,columns={testsuite0_.id ,className=com.test.domain.TestCase}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join Run_TestCase_TestResult run_testca2_ on testcases1_.id=run_testca2_.testCase_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=trr,role=com.test.domain.TestCase.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca2_,origin=inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id,columns={testcases1_.id ,className=com.test.domain.Run_TestCase_TestResult}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'run_testca2_.run_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=run.id,path=trr.run.id,tableAlias=run_testca2_,className=com.test.domain.Run_TestCase_TestResult,classAlias=trr}
          |  +-[DOT] DotNode: 'run_testca2_.run_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=run.id,path=trr.run,tableAlias=run_testca2_,className=com.test.domain.Run_TestCase_TestResult,classAlias=trr}
          |  |  +-[ALIAS_REF] IdentNode: 'run_testca2_.id' {alias=trr, className=com.test.domain.Run_TestCase_TestResult, tableAlias=run_testca2_}
          |  |  \-[IDENT] IdentNode: 'run' {originalText=run}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=runId, expectedType=org.hibernate.type.LongType@38676631}

[2015-07-24 18:22:28,337]DEBUG  4350[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-07-24 18:22:28,338]DEBUG  4351[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: select distinct testsuite from com.test.domain.TestSuite testsuite join testsuite.testCases tcs join tcs.run_TestCase_TestResults trr where trr.run.id = :runId
[2015-07-24 18:22:28,338]DEBUG  4351[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select distinct testsuite0_.id as id1_8_, testsuite0_.name as name2_8_ from TestSuite testsuite0_ inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id inner join Run_TestCase_TestResult run_testca2_ on testcases1_.id=run_testca2_.testCase_id where run_testca2_.run_id=?
[2015-07-24 18:22:28,338]DEBUG  4351[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-07-24 18:22:28,339]DEBUG  4352[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByName
[2015-07-24 18:22:28,339]DEBUG  4352[localhost-startStop-1] - org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:119) - Looking up named query TestSuite.findByName
[2015-07-24 18:22:28,340]DEBUG  4353[localhost-startStop-1] - org.hibernate.jpa.spi.AbstractEntityManagerImpl.markForRollbackOnly(AbstractEntityManagerImpl.java:1529) - Mark transaction for rollback
[2015-07-24 18:22:28,340]DEBUG  4353[localhost-startStop-1] - org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:102) - Did not find named query TestSuite.findByName
[2015-07-24 18:22:28,341]DEBUG  4354[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,341]DEBUG  4354[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,341]DEBUG  4354[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,341]DEBUG  4354[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,342]DEBUG  4355[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,342]DEBUG  4355[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,343]DEBUG  4356[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,343]DEBUG  4356[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,344]DEBUG  4357[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,344]DEBUG  4357[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,345]DEBUG  4358[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,345]DEBUG  4358[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,345]DEBUG  4358[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,346]DEBUG  4359[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,346]DEBUG  4359[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,346]DEBUG  4359[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,347]DEBUG  4360[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,347]DEBUG  4360[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,348]DEBUG  4361[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-07-24 18:22:28,348]DEBUG  4361[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-07-24 18:22:28,349]DEBUG  4362[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@b99aad6]
[2015-07-24 18:22:28,352]DEBUG  4365[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,352]DEBUG  4365[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testSuiteDao'
[2015-07-24 18:22:28,353]DEBUG  4366[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,354]DEBUG  4367[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'testSuiteDao'
[2015-07-24 18:22:28,354]DEBUG  4367[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.service.TestSuiteService com.test.service.impl.TestCaseServiceImpl.testSuiteService
[2015-07-24 18:22:28,354]DEBUG  4367[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testSuiteService'
[2015-07-24 18:22:28,355]DEBUG  4368[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testSuiteService'
[2015-07-24 18:22:28,356]DEBUG  4369[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestSuiteServiceImpl]: AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestSuiteServiceImpl.testSuiteDao
[2015-07-24 18:22:28,356]DEBUG  4369[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestSuiteServiceImpl]: AutowiredFieldElement for private com.test.service.RunService com.test.service.impl.TestSuiteServiceImpl.runService
[2015-07-24 18:22:28,356]DEBUG  4369[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestSuiteServiceImpl]: AutowiredFieldElement for private com.test.dao.RunDao com.test.service.impl.TestSuiteServiceImpl.runDao
[2015-07-24 18:22:28,356]DEBUG  4369[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testSuiteService' to allow for resolving potential circular references
[2015-07-24 18:22:28,359]DEBUG  4372[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteService': AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestSuiteServiceImpl.testSuiteDao
[2015-07-24 18:22:28,359]DEBUG  4372[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testSuiteDao'
[2015-07-24 18:22:28,359]DEBUG  4372[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testSuiteService' to bean named 'testSuiteDao'
[2015-07-24 18:22:28,359]DEBUG  4372[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteService': AutowiredFieldElement for private com.test.service.RunService com.test.service.impl.TestSuiteServiceImpl.runService
[2015-07-24 18:22:28,360]DEBUG  4373[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runService'
[2015-07-24 18:22:28,360]DEBUG  4373[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testSuiteService' to bean named 'runService'
[2015-07-24 18:22:28,360]DEBUG  4373[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteService': AutowiredFieldElement for private com.test.dao.RunDao com.test.service.impl.TestSuiteServiceImpl.runDao
[2015-07-24 18:22:28,360]DEBUG  4373[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runDao'
[2015-07-24 18:22:28,361]DEBUG  4374[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testSuiteService' to bean named 'runDao'
[2015-07-24 18:22:28,361]DEBUG  4374[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,361]DEBUG  4374[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'TestSuiteServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-07-24 18:22:28,362]DEBUG  4375[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'testSuiteService' with 0 common interceptors and 1 specific interceptors
[2015-07-24 18:22:28,362]DEBUG  4375[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.TestSuiteServiceImpl@7ce742d2]
[2015-07-24 18:22:28,364]DEBUG  4377[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testSuiteService'
[2015-07-24 18:22:28,365]DEBUG  4378[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'testSuiteService'
[2015-07-24 18:22:28,365]DEBUG  4378[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.impl.TestCaseServiceImpl.run_TestCase_TestResultDao
[2015-07-24 18:22:28,365]DEBUG  4378[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'env_TestCase_TestResultDao'
[2015-07-24 18:22:28,365]DEBUG  4378[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'env_TestCase_TestResultDao'
[2015-07-24 18:22:28,365]DEBUG  4378[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,366]DEBUG  4379[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'TestCaseServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-07-24 18:22:28,366]DEBUG  4379[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'testCaseService' with 0 common interceptors and 1 specific interceptors
[2015-07-24 18:22:28,366]DEBUG  4379[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.TestCaseServiceImpl@6dc44294]
[2015-07-24 18:22:28,383]DEBUG  4396[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testCaseService'
[2015-07-24 18:22:28,383]DEBUG  4396[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testResultService'
[2015-07-24 18:22:28,383]DEBUG  4396[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testResultService'
[2015-07-24 18:22:28,384]DEBUG  4397[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestResultServiceImpl]: AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.impl.TestResultServiceImpl.testResultDao
[2015-07-24 18:22:28,384]DEBUG  4397[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testResultService' to allow for resolving potential circular references
[2015-07-24 18:22:28,387]DEBUG  4400[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testResultService': AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.impl.TestResultServiceImpl.testResultDao
[2015-07-24 18:22:28,387]DEBUG  4400[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testResultDao'
[2015-07-24 18:22:28,387]DEBUG  4400[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testResultService' to bean named 'testResultDao'
[2015-07-24 18:22:28,387]DEBUG  4400[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,388]DEBUG  4401[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'TestResultServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-07-24 18:22:28,388]DEBUG  4401[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'testResultService' with 0 common interceptors and 1 specific interceptors
[2015-07-24 18:22:28,388]DEBUG  4401[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.TestResultServiceImpl@504df7ac]
[2015-07-24 18:22:28,390]DEBUG  4403[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testResultService'
[2015-07-24 18:22:28,390]DEBUG  4403[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testSuiteService'
[2015-07-24 18:22:28,390]DEBUG  4403[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'initDBService'
[2015-07-24 18:22:28,390]DEBUG  4403[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'initDBService'
[2015-07-24 18:22:28,391]DEBUG  4404[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.InitDBService.run_TestCase_TestResultDao
[2015-07-24 18:22:28,391]DEBUG  4404[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.EnvironmentDao com.test.service.InitDBService.environmentDao
[2015-07-24 18:22:28,391]DEBUG  4404[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.BranchDao com.test.service.InitDBService.branchDao
[2015-07-24 18:22:28,397]DEBUG  4410[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.BuildDao com.test.service.InitDBService.buildDao
[2015-07-24 18:22:28,397]DEBUG  4410[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.InitDBService.testCaseDao
[2015-07-24 18:22:28,397]DEBUG  4410[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.InitDBService.testResultDao
[2015-07-24 18:22:28,397]DEBUG  4410[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.RunDao com.test.service.InitDBService.runDao
[2015-07-24 18:22:28,397]DEBUG  4410[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.InitDBService]: AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.InitDBService.testSuiteDao
[2015-07-24 18:22:28,397]DEBUG  4410[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'initDBService' to allow for resolving potential circular references
[2015-07-24 18:22:28,399]DEBUG  4412[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.InitDBService.run_TestCase_TestResultDao
[2015-07-24 18:22:28,400]DEBUG  4413[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'env_TestCase_TestResultDao'
[2015-07-24 18:22:28,400]DEBUG  4413[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'env_TestCase_TestResultDao'
[2015-07-24 18:22:28,400]DEBUG  4413[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.EnvironmentDao com.test.service.InitDBService.environmentDao
[2015-07-24 18:22:28,400]DEBUG  4413[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'environmentDao'
[2015-07-24 18:22:28,400]DEBUG  4413[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'environmentDao'
[2015-07-24 18:22:28,401]DEBUG  4414[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.BranchDao com.test.service.InitDBService.branchDao
[2015-07-24 18:22:28,401]DEBUG  4414[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'branchDao'
[2015-07-24 18:22:28,401]DEBUG  4414[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'branchDao'
[2015-07-24 18:22:28,401]DEBUG  4414[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.BuildDao com.test.service.InitDBService.buildDao
[2015-07-24 18:22:28,401]DEBUG  4414[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'buildDao'
[2015-07-24 18:22:28,401]DEBUG  4414[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'buildDao'
[2015-07-24 18:22:28,402]DEBUG  4415[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.InitDBService.testCaseDao
[2015-07-24 18:22:28,402]DEBUG  4415[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testCaseDao'
[2015-07-24 18:22:28,402]DEBUG  4415[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'testCaseDao'
[2015-07-24 18:22:28,402]DEBUG  4415[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.InitDBService.testResultDao
[2015-07-24 18:22:28,402]DEBUG  4415[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testResultDao'
[2015-07-24 18:22:28,402]DEBUG  4415[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'testResultDao'
[2015-07-24 18:22:28,403]DEBUG  4416[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.RunDao com.test.service.InitDBService.runDao
[2015-07-24 18:22:28,403]DEBUG  4416[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runDao'
[2015-07-24 18:22:28,403]DEBUG  4416[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'runDao'
[2015-07-24 18:22:28,403]DEBUG  4416[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'initDBService': AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.InitDBService.testSuiteDao
[2015-07-24 18:22:28,403]DEBUG  4416[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testSuiteDao'
[2015-07-24 18:22:28,403]DEBUG  4416[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'initDBService' to bean named 'testSuiteDao'
[2015-07-24 18:22:28,404]DEBUG  4417[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,404]DEBUG  4417[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'InitDBService.init' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-07-24 18:22:28,404]DEBUG  4417[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'initDBService' with 0 common interceptors and 1 specific interceptors
[2015-07-24 18:22:28,412]DEBUG  4425[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.test.service.InitDBService@ae66bdc]
[2015-07-24 18:22:28,469]DEBUG  4482[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-07-24 18:22:28,470]DEBUG  4483[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-07-24 18:22:28,471]DEBUG  4484[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2015-07-24 18:22:28,476]DEBUG  4489[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-07-24 18:22:28,477]DEBUG  4490[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-07-24 18:22:28,477]DEBUG  4490[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-07-24 18:22:28,481]DEBUG  4494[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831) - Unable to apply any optimisations to advised method: public void com.test.service.InitDBService.init()
[2015-07-24 18:22:28,481]DEBUG  4494[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'InitDBService.createRun' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-07-24 18:22:28,481]DEBUG  4494[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831) - Unable to apply any optimisations to advised method: public void com.test.service.InitDBService.createRun()
[2015-07-24 18:22:28,481]DEBUG  4494[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:782) - Found finalize() method - using NO_OVERRIDE
[2015-07-24 18:22:28,482]DEBUG  4495[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:794) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-07-24 18:22:28,482]DEBUG  4495[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-07-24 18:22:28,482]DEBUG  4495[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:799) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-07-24 18:22:28,482]DEBUG  4495[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-07-24 18:22:28,482]DEBUG  4495[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-07-24 18:22:28,482]DEBUG  4495[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-07-24 18:22:28,483]DEBUG  4496[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-07-24 18:22:28,483]DEBUG  4496[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-07-24 18:22:28,483]DEBUG  4496[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-07-24 18:22:28,483]DEBUG  4496[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-07-24 18:22:28,483]DEBUG  4496[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-07-24 18:22:28,483]DEBUG  4496[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-07-24 18:22:28,483]DEBUG  4496[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-07-24 18:22:28,484]DEBUG  4497[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-07-24 18:22:28,484]DEBUG  4497[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-07-24 18:22:28,484]DEBUG  4497[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-07-24 18:22:28,484]DEBUG  4497[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-07-24 18:22:28,484]DEBUG  4497[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-07-24 18:22:28,484]DEBUG  4497[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-07-24 18:22:28,484]DEBUG  4497[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-07-24 18:22:28,485]DEBUG  4498[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-07-24 18:22:28,485]DEBUG  4498[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-07-24 18:22:28,485]DEBUG  4498[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-07-24 18:22:28,485]DEBUG  4498[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-07-24 18:22:28,485]DEBUG  4498[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-07-24 18:22:28,485]DEBUG  4498[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-07-24 18:22:28,486]DEBUG  4499[localhost-startStop-1] - org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-07-24 18:22:28,506]DEBUG  4519[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'initDBService'
[2015-07-24 18:22:28,506]DEBUG  4519[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-07-24 18:22:28,506]DEBUG  4519[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-07-24 18:22:28,506]DEBUG  4519[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-07-24 18:22:28,507]DEBUG  4520[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-07-24 18:22:28,508]DEBUG  4521[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-07-24 18:22:28,508]DEBUG  4521[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'dataSource'
[2015-07-24 18:22:28,508]DEBUG  4521[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'entityManagerFactory'
[2015-07-24 18:22:28,508]DEBUG  4521[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-07-24 18:22:28,508]DEBUG  4521[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-07-24 18:22:28,508]DEBUG  4521[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-07-24 18:22:28,509]DEBUG  4522[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,509]DEBUG  4522[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'transactionManager'
[2015-07-24 18:22:28,509]DEBUG  4522[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'transactionManager'
[2015-07-24 18:22:28,518]DEBUG  4531[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[2015-07-24 18:22:28,522]DEBUG  4535[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'dataSource'
[2015-07-24 18:22:28,524]DEBUG  4537[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'entityManagerFactory'
[2015-07-24 18:22:28,524]DEBUG  4537[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2015-07-24 18:22:28,524]DEBUG  4537[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-07-24 18:22:28,526]DEBUG  4539[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'transactionManager'
[2015-07-24 18:22:28,526]DEBUG  4539[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
[2015-07-24 18:22:28,526]DEBUG  4539[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'foo'
[2015-07-24 18:22:28,526]DEBUG  4539[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'jpaMappingContext'
[2015-07-24 18:22:28,526]DEBUG  4539[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testResultDao'
[2015-07-24 18:22:28,526]DEBUG  4539[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testSuiteDao'
[2015-07-24 18:22:28,527]DEBUG  4540[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'environmentDao'
[2015-07-24 18:22:28,527]DEBUG  4540[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testCaseDao'
[2015-07-24 18:22:28,527]DEBUG  4540[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runDao'
[2015-07-24 18:22:28,527]DEBUG  4540[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'env_TestCase_TestResultDao'
