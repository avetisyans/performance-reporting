[2015-08-27 19:18:03,689]DEBUG  5288[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,689]DEBUG  5288[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121) - select << begin [level=1, statement=select]
[2015-08-27 19:18:03,690]DEBUG  5289[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestResult (testresult) -> testresult0_
[2015-08-27 19:18:03,690]DEBUG  5289[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testresult -> testresult0_.id
[2015-08-27 19:18:03,690]DEBUG  5289[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run_TestCase_TestResults -> org.hibernate.type.OneToOneType(com.test.domain.Run_TestCase_TestResult)
[2015-08-27 19:18:03,691]DEBUG  5290[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for run_TestCase_TestResults in com.test.domain.TestResult (rtt) parent = [ {null} ]
[2015-08-27 19:18:03,691]DEBUG  5290[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run_TestCase_TestResult (rtt) -> run_testca1_
[2015-08-27 19:18:03,691]DEBUG  5290[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : testresult.run_TestCase_TestResults -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rtt,role=null,tableName=Run_TestCase_TestResult,tableAlias=run_testca1_,origin=TestResult testresult0_,columns={testresult0_.id ,className=com.test.domain.Run_TestCase_TestResult}}
[2015-08-27 19:18:03,691]DEBUG  5290[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testresult.run_TestCase_TestResults -> testresult0_.id
[2015-08-27 19:18:03,692]DEBUG  5291[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Run_TestCase_TestResult run_testca1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rtt,role=com.test.domain.TestResult.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca1_,origin=TestResult testresult0_,columns={testresult0_.id ,className=com.test.domain.Run_TestCase_TestResult}}

[2015-08-27 19:18:03,692]DEBUG  5291[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca1_.id
[2015-08-27 19:18:03,692]DEBUG  5291[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCase -> org.hibernate.type.ManyToOneType(com.test.domain.TestCase)
[2015-08-27 19:18:03,692]DEBUG  5291[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for testCase in com.test.domain.Run_TestCase_TestResult (tc) parent = [ {null} ]
[2015-08-27 19:18:03,693]DEBUG  5292[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestCase (tc) -> testcase2_
[2015-08-27 19:18:03,693]DEBUG  5292[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : rtt.testCase -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tc,role=null,tableName=TestCase,tableAlias=testcase2_,origin=Run_TestCase_TestResult run_testca1_,columns={run_testca1_.testCase_id ,className=com.test.domain.TestCase}}
[2015-08-27 19:18:03,693]DEBUG  5292[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testCase -> run_testca1_.testCase_id
[2015-08-27 19:18:03,693]DEBUG  5292[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'TestCase testcase2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tc,role=com.test.domain.Run_TestCase_TestResult.testCase,tableName=TestCase,tableAlias=testcase2_,origin=Run_TestCase_TestResult run_testca1_,columns={run_testca1_.testCase_id ,className=com.test.domain.TestCase}}

[2015-08-27 19:18:03,694]DEBUG  5293[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testresult -> testresult0_.id
[2015-08-27 19:18:03,694]DEBUG  5293[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tc -> testcase2_.id
[2015-08-27 19:18:03,694]DEBUG  5293[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : id -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,695]DEBUG  5294[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tc.id -> testcase2_.id
[2015-08-27 19:18:03,695]DEBUG  5294[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca1_.id
[2015-08-27 19:18:03,695]DEBUG  5294[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run -> org.hibernate.type.ManyToOneType(com.test.domain.Run)
[2015-08-27 19:18:03,696]DEBUG  5295[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run_TestCase_TestResult does not require a join.
[2015-08-27 19:18:03,696]DEBUG  5295[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'run.id'
[2015-08-27 19:18:03,696]DEBUG  5295[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.run -> run_testca1_.run_id
[2015-08-27 19:18:03,696]DEBUG  5295[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run.id -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,697]DEBUG  5296[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.run.id -> run_testca1_.run_id
[2015-08-27 19:18:03,697]DEBUG  5296[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125) - select : finishing up [level=1, statement=select]
[2015-08-27 19:18:03,697]DEBUG  5296[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:671) - processQuery() :  ( SELECT ( {select clause} testresult0_.id ) ( FromClause{level=1} ( TestResult testresult0_ ( Run_TestCase_TestResult run_testca1_ TestCase testcase2_ ) ) ) ( where ( and ( = ( testcase2_.id testcase2_.id id ) ? ) ( = ( run_testca1_.run_id ( run_testca1_.run_id run_testca1_.id run ) id ) ? ) ) ) )
[2015-08-27 19:18:03,697]DEBUG  5296[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [TestResult testresult0_]
[2015-08-27 19:18:03,698]DEBUG  5297[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join Run_TestCase_TestResult run_testca1_ on testresult0_.id=run_testca1_.testResult_id]
[2015-08-27 19:18:03,698]DEBUG  5297[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join TestCase testcase2_ on run_testca1_.testCase_id=testcase2_.id]
[2015-08-27 19:18:03,698]DEBUG  5297[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129) - select >> end [level=1, statement=select]
[2015-08-27 19:18:03,699]DEBUG  5298[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:281) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TestCase,TestResult,Run_TestCase_TestResult)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'testresult0_.id as id1_7_' {alias=testresult, className=com.test.domain.TestResult, tableAlias=testresult0_}
    |  \-[SQL_TOKEN] SqlFragment: 'testresult0_.endTime as endTime2_7_, testresult0_.result as result3_7_, testresult0_.startTime as startTim4_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[testresult, rtt, tc], fromElementByTableAlias=[testcase2_, run_testca1_, testresult0_], fromElementsByPath=[rtt.testCase, testresult.run_TestCase_TestResults], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TestResult testresult0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=testresult,role=null,tableName=TestResult,tableAlias=testresult0_,origin=null,columns={,className=com.test.domain.TestResult}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join Run_TestCase_TestResult run_testca1_ on testresult0_.id=run_testca1_.testResult_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rtt,role=com.test.domain.TestResult.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca1_,origin=TestResult testresult0_,columns={testresult0_.id ,className=com.test.domain.Run_TestCase_TestResult}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join TestCase testcase2_ on run_testca1_.testCase_id=testcase2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tc,role=com.test.domain.Run_TestCase_TestResult.testCase,tableName=TestCase,tableAlias=testcase2_,origin=inner join Run_TestCase_TestResult run_testca1_ on testresult0_.id=run_testca1_.testResult_id,columns={run_testca1_.testCase_id ,className=com.test.domain.TestCase}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'testcase2_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=tc.id,tableAlias=testcase2_,className=com.test.domain.TestCase,classAlias=tc}
          |  |  +-[ALIAS_REF] IdentNode: 'testcase2_.id' {alias=tc, className=com.test.domain.TestCase, tableAlias=testcase2_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=testCaseId, expectedType=org.hibernate.type.LongType@16930c45}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'run_testca1_.run_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=run.id,path=rtt.run.id,tableAlias=run_testca1_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
             |  +-[DOT] DotNode: 'run_testca1_.run_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=run.id,path=rtt.run,tableAlias=run_testca1_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
             |  |  +-[ALIAS_REF] IdentNode: 'run_testca1_.id' {alias=rtt, className=com.test.domain.Run_TestCase_TestResult, tableAlias=run_testca1_}
             |  |  \-[IDENT] IdentNode: 'run' {originalText=run}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[NAMED_PARAM] ParameterNode: '?' {name=runId, expectedType=org.hibernate.type.LongType@16930c45}

[2015-08-27 19:18:03,699]DEBUG  5298[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,699]DEBUG  5298[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: select testresult from com.test.domain.TestResult testresult join testresult.run_TestCase_TestResults rtt join rtt.testCase tc where tc.id = :testCaseId and rtt.run.id = :runId
[2015-08-27 19:18:03,699]DEBUG  5298[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select testresult0_.id as id1_7_, testresult0_.endTime as endTime2_7_, testresult0_.result as result3_7_, testresult0_.startTime as startTim4_7_ from TestResult testresult0_ inner join Run_TestCase_TestResult run_testca1_ on testresult0_.id=run_testca1_.testResult_id inner join TestCase testcase2_ on run_testca1_.testCase_id=testcase2_.id where testcase2_.id=? and run_testca1_.run_id=?
[2015-08-27 19:18:03,700]DEBUG  5299[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,701]DEBUG  5300[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByEnvAndTestCaseForRecentDays
[2015-08-27 19:18:03,703]DEBUG  5302[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:294) - parse() - HQL: select tr from com.test.domain.Run_TestCase_TestResult rtt join rtt.testResult tr join rtt.run run where run.environment.id = :envId and rtt.testCase.id = :testCaseId and tr.endTime > :dateBefore order by run.endTime asc
[2015-08-27 19:18:03,723]DEBUG  5322[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:312) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Run_TestCase_TestResult'
    |  |  |  \-[ALIAS] Node: 'rtt'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'rtt'
    |  |  |  |  \-[IDENT] Node: 'testResult'
    |  |  |  \-[ALIAS] Node: 'tr'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'rtt'
    |  |     |  \-[IDENT] Node: 'run'
    |  |     \-[ALIAS] Node: 'run'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'tr'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[AND] Node: 'and'
    |     |  +-[EQ] Node: '='
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'run'
    |     |  |  |  |  \-[IDENT] Node: 'environment'
    |     |  |  |  \-[IDENT] Node: 'id'
    |     |  |  \-[COLON] Node: ':'
    |     |  |     \-[IDENT] Node: 'envId'
    |     |  \-[EQ] Node: '='
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[DOT] Node: '.'
    |     |     |  |  +-[IDENT] Node: 'rtt'
    |     |     |  |  \-[IDENT] Node: 'testCase'
    |     |     |  \-[IDENT] Node: 'id'
    |     |     \-[COLON] Node: ':'
    |     |        \-[IDENT] Node: 'testCaseId'
    |     \-[GT] Node: '>'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'tr'
    |        |  \-[IDENT] Node: 'endTime'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'dateBefore'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'run'
       |  \-[IDENT] Node: 'endTime'
       \-[ASCENDING] Node: 'asc'

[2015-08-27 19:18:03,723]DEBUG  5322[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,724]DEBUG  5323[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121) - select << begin [level=1, statement=select]
[2015-08-27 19:18:03,724]DEBUG  5323[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run_TestCase_TestResult (rtt) -> run_testca0_
[2015-08-27 19:18:03,724]DEBUG  5323[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca0_.id
[2015-08-27 19:18:03,725]DEBUG  5324[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testResult -> org.hibernate.type.ManyToOneType(com.test.domain.TestResult)
[2015-08-27 19:18:03,725]DEBUG  5324[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for testResult in com.test.domain.Run_TestCase_TestResult (tr) parent = [ {null} ]
[2015-08-27 19:18:03,725]DEBUG  5324[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestResult (tr) -> testresult1_
[2015-08-27 19:18:03,725]DEBUG  5324[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : rtt.testResult -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tr,role=null,tableName=TestResult,tableAlias=testresult1_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.testResult_id ,className=com.test.domain.TestResult}}
[2015-08-27 19:18:03,726]DEBUG  5325[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testResult -> run_testca0_.testResult_id
[2015-08-27 19:18:03,726]DEBUG  5325[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'TestResult testresult1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tr,role=com.test.domain.Run_TestCase_TestResult.testResult,tableName=TestResult,tableAlias=testresult1_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.testResult_id ,className=com.test.domain.TestResult}}

[2015-08-27 19:18:03,726]DEBUG  5325[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca0_.id
[2015-08-27 19:18:03,727]DEBUG  5326[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run -> org.hibernate.type.ManyToOneType(com.test.domain.Run)
[2015-08-27 19:18:03,727]DEBUG  5326[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for run in com.test.domain.Run_TestCase_TestResult (run) parent = [ {null} ]
[2015-08-27 19:18:03,727]DEBUG  5326[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run (run) -> run2_
[2015-08-27 19:18:03,727]DEBUG  5326[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : rtt.run -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=run,role=null,tableName=Run,tableAlias=run2_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.run_id ,className=com.test.domain.Run}}
[2015-08-27 19:18:03,728]DEBUG  5327[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.run -> run_testca0_.run_id
[2015-08-27 19:18:03,728]DEBUG  5327[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Run run2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=run,role=com.test.domain.Run_TestCase_TestResult.run,tableName=Run,tableAlias=run2_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.run_id ,className=com.test.domain.Run}}

[2015-08-27 19:18:03,728]DEBUG  5327[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tr -> testresult1_.id
[2015-08-27 19:18:03,728]DEBUG  5327[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run -> run2_.id
[2015-08-27 19:18:03,729]DEBUG  5328[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : environment -> org.hibernate.type.ManyToOneType(com.test.domain.Environment)
[2015-08-27 19:18:03,729]DEBUG  5328[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run does not require a join.
[2015-08-27 19:18:03,729]DEBUG  5328[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'environment.id'
[2015-08-27 19:18:03,729]DEBUG  5328[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run.environment -> run2_.environment_id
[2015-08-27 19:18:03,730]DEBUG  5329[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : environment.id -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,730]DEBUG  5329[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run.environment.id -> run2_.environment_id
[2015-08-27 19:18:03,730]DEBUG  5329[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca0_.id
[2015-08-27 19:18:03,730]DEBUG  5329[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCase -> org.hibernate.type.ManyToOneType(com.test.domain.TestCase)
[2015-08-27 19:18:03,731]DEBUG  5330[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run_TestCase_TestResult does not require a join.
[2015-08-27 19:18:03,731]DEBUG  5330[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'testCase.id'
[2015-08-27 19:18:03,731]DEBUG  5330[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testCase -> run_testca0_.testCase_id
[2015-08-27 19:18:03,731]DEBUG  5330[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCase.id -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,732]DEBUG  5331[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testCase.id -> run_testca0_.testCase_id
[2015-08-27 19:18:03,732]DEBUG  5331[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tr -> testresult1_.id
[2015-08-27 19:18:03,732]DEBUG  5331[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : endTime -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,732]DEBUG  5331[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tr.endTime -> testresult1_.endTime
[2015-08-27 19:18:03,733]DEBUG  5332[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run -> run2_.id
[2015-08-27 19:18:03,733]DEBUG  5332[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : endTime -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,733]DEBUG  5332[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run.endTime -> run2_.endTime
[2015-08-27 19:18:03,733]DEBUG  5332[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125) - select : finishing up [level=1, statement=select]
[2015-08-27 19:18:03,734]DEBUG  5333[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:671) - processQuery() :  ( SELECT ( {select clause} testresult1_.id ) ( FromClause{level=1} ( Run_TestCase_TestResult run_testca0_ TestResult testresult1_ Run run2_ ) ) ( where ( and ( and ( = ( run2_.environment_id ( run2_.environment_id run2_.id environment ) id ) ? ) ( = ( run_testca0_.testCase_id ( run_testca0_.testCase_id run_testca0_.id testCase ) id ) ? ) ) ( > ( testresult1_.endTime testresult1_.id endTime ) ? ) ) ) ( order ( run2_.endTime run2_.id endTime ) asc ) )
[2015-08-27 19:18:03,734]DEBUG  5333[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [Run_TestCase_TestResult run_testca0_]
[2015-08-27 19:18:03,734]DEBUG  5333[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join TestResult testresult1_ on run_testca0_.testResult_id=testresult1_.id]
[2015-08-27 19:18:03,734]DEBUG  5333[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join Run run2_ on run_testca0_.run_id=run2_.id]
[2015-08-27 19:18:03,735]DEBUG  5334[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129) - select >> end [level=1, statement=select]
[2015-08-27 19:18:03,735]DEBUG  5334[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:281) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TestResult,Run,Run_TestCase_TestResult)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'testresult1_.id as id1_7_' {alias=tr, className=com.test.domain.TestResult, tableAlias=testresult1_}
    |  \-[SQL_TOKEN] SqlFragment: 'testresult1_.endTime as endTime2_7_, testresult1_.result as result3_7_, testresult1_.startTime as startTim4_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[rtt, run, tr], fromElementByTableAlias=[run_testca0_, run2_, testresult1_], fromElementsByPath=[rtt.testResult, rtt.run], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Run_TestCase_TestResult run_testca0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rtt,role=null,tableName=Run_TestCase_TestResult,tableAlias=run_testca0_,origin=null,columns={,className=com.test.domain.Run_TestCase_TestResult}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join TestResult testresult1_ on run_testca0_.testResult_id=testresult1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tr,role=com.test.domain.Run_TestCase_TestResult.testResult,tableName=TestResult,tableAlias=testresult1_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.testResult_id ,className=com.test.domain.TestResult}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join Run run2_ on run_testca0_.run_id=run2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=run,role=com.test.domain.Run_TestCase_TestResult.run,tableName=Run,tableAlias=run2_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.run_id ,className=com.test.domain.Run}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[AND] SqlNode: 'and'
    |     |  +-[EQ] BinaryLogicOperatorNode: '='
    |     |  |  +-[DOT] DotNode: 'run2_.environment_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=environment.id,path=run.environment.id,tableAlias=run2_,className=com.test.domain.Run,classAlias=run}
    |     |  |  |  +-[DOT] DotNode: 'run2_.environment_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=environment.id,path=run.environment,tableAlias=run2_,className=com.test.domain.Run,classAlias=run}
    |     |  |  |  |  +-[ALIAS_REF] IdentNode: 'run2_.id' {alias=run, className=com.test.domain.Run, tableAlias=run2_}
    |     |  |  |  |  \-[IDENT] IdentNode: 'environment' {originalText=environment}
    |     |  |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |     |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=envId, expectedType=org.hibernate.type.LongType@16930c45}
    |     |  \-[EQ] BinaryLogicOperatorNode: '='
    |     |     +-[DOT] DotNode: 'run_testca0_.testCase_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=testCase.id,path=rtt.testCase.id,tableAlias=run_testca0_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
    |     |     |  +-[DOT] DotNode: 'run_testca0_.testCase_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=testCase.id,path=rtt.testCase,tableAlias=run_testca0_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
    |     |     |  |  +-[ALIAS_REF] IdentNode: 'run_testca0_.id' {alias=rtt, className=com.test.domain.Run_TestCase_TestResult, tableAlias=run_testca0_}
    |     |     |  |  \-[IDENT] IdentNode: 'testCase' {originalText=testCase}
    |     |     |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |     |     \-[NAMED_PARAM] ParameterNode: '?' {name=testCaseId, expectedType=org.hibernate.type.LongType@16930c45}
    |     \-[GT] BinaryLogicOperatorNode: '>'
    |        +-[DOT] DotNode: 'testresult1_.endTime' {propertyName=endTime,dereferenceType=PRIMITIVE,getPropertyPath=endTime,path=tr.endTime,tableAlias=testresult1_,className=com.test.domain.TestResult,classAlias=tr}
    |        |  +-[ALIAS_REF] IdentNode: 'testresult1_.id' {alias=tr, className=com.test.domain.TestResult, tableAlias=testresult1_}
    |        |  \-[IDENT] IdentNode: 'endTime' {originalText=endTime}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=dateBefore, expectedType=org.hibernate.type.LongType@16930c45}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'run2_.endTime' {propertyName=endTime,dereferenceType=PRIMITIVE,getPropertyPath=endTime,path=run.endTime,tableAlias=run2_,className=com.test.domain.Run,classAlias=run}
       |  +-[ALIAS_REF] IdentNode: 'run2_.id' {alias=run, className=com.test.domain.Run, tableAlias=run2_}
       |  \-[IDENT] IdentNode: 'endTime' {originalText=endTime}
       \-[ASCENDING] SqlNode: 'asc'

[2015-08-27 19:18:03,736]DEBUG  5335[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,736]DEBUG  5335[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: select tr from com.test.domain.Run_TestCase_TestResult rtt join rtt.testResult tr join rtt.run run where run.environment.id = :envId and rtt.testCase.id = :testCaseId and tr.endTime > :dateBefore order by run.endTime asc
[2015-08-27 19:18:03,736]DEBUG  5335[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select testresult1_.id as id1_7_, testresult1_.endTime as endTime2_7_, testresult1_.result as result3_7_, testresult1_.startTime as startTim4_7_ from Run_TestCase_TestResult run_testca0_ inner join TestResult testresult1_ on run_testca0_.testResult_id=testresult1_.id inner join Run run2_ on run_testca0_.run_id=run2_.id where run2_.environment_id=? and run_testca0_.testCase_id=? and testresult1_.endTime>? order by run2_.endTime asc
[2015-08-27 19:18:03,736]DEBUG  5335[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,737]DEBUG  5336[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByEnvAndTestCase
[2015-08-27 19:18:03,738]DEBUG  5337[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:294) - parse() - HQL: select tr from com.test.domain.Run_TestCase_TestResult rtt join rtt.testResult tr join rtt.run run where run.environment.id = :envId and rtt.testCase.id = :testCaseId order by run.endTime desc
[2015-08-27 19:18:03,753]DEBUG  5352[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:312) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Run_TestCase_TestResult'
    |  |  |  \-[ALIAS] Node: 'rtt'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'rtt'
    |  |  |  |  \-[IDENT] Node: 'testResult'
    |  |  |  \-[ALIAS] Node: 'tr'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'rtt'
    |  |     |  \-[IDENT] Node: 'run'
    |  |     \-[ALIAS] Node: 'run'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'tr'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'run'
    |     |  |  |  \-[IDENT] Node: 'environment'
    |     |  |  \-[IDENT] Node: 'id'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'envId'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'rtt'
    |        |  |  \-[IDENT] Node: 'testCase'
    |        |  \-[IDENT] Node: 'id'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'testCaseId'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'run'
       |  \-[IDENT] Node: 'endTime'
       \-[DESCENDING] Node: 'desc'

[2015-08-27 19:18:03,753]DEBUG  5352[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,753]DEBUG  5352[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121) - select << begin [level=1, statement=select]
[2015-08-27 19:18:03,754]DEBUG  5353[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run_TestCase_TestResult (rtt) -> run_testca0_
[2015-08-27 19:18:03,754]DEBUG  5353[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca0_.id
[2015-08-27 19:18:03,754]DEBUG  5353[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testResult -> org.hibernate.type.ManyToOneType(com.test.domain.TestResult)
[2015-08-27 19:18:03,755]DEBUG  5354[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for testResult in com.test.domain.Run_TestCase_TestResult (tr) parent = [ {null} ]
[2015-08-27 19:18:03,755]DEBUG  5354[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestResult (tr) -> testresult1_
[2015-08-27 19:18:03,755]DEBUG  5354[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : rtt.testResult -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tr,role=null,tableName=TestResult,tableAlias=testresult1_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.testResult_id ,className=com.test.domain.TestResult}}
[2015-08-27 19:18:03,755]DEBUG  5354[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testResult -> run_testca0_.testResult_id
[2015-08-27 19:18:03,756]DEBUG  5355[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'TestResult testresult1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tr,role=com.test.domain.Run_TestCase_TestResult.testResult,tableName=TestResult,tableAlias=testresult1_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.testResult_id ,className=com.test.domain.TestResult}}

[2015-08-27 19:18:03,756]DEBUG  5355[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca0_.id
[2015-08-27 19:18:03,756]DEBUG  5355[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run -> org.hibernate.type.ManyToOneType(com.test.domain.Run)
[2015-08-27 19:18:03,756]DEBUG  5355[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityJoin(DotNode.java:438) - dereferenceEntityJoin() : generating join for run in com.test.domain.Run_TestCase_TestResult (run) parent = [ {null} ]
[2015-08-27 19:18:03,757]DEBUG  5356[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run (run) -> run2_
[2015-08-27 19:18:03,757]DEBUG  5356[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : rtt.run -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=run,role=null,tableName=Run,tableAlias=run2_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.run_id ,className=com.test.domain.Run}}
[2015-08-27 19:18:03,757]DEBUG  5356[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.run -> run_testca0_.run_id
[2015-08-27 19:18:03,757]DEBUG  5356[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Run run2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=run,role=com.test.domain.Run_TestCase_TestResult.run,tableName=Run,tableAlias=run2_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.run_id ,className=com.test.domain.Run}}

[2015-08-27 19:18:03,758]DEBUG  5357[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tr -> testresult1_.id
[2015-08-27 19:18:03,758]DEBUG  5357[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run -> run2_.id
[2015-08-27 19:18:03,758]DEBUG  5357[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : environment -> org.hibernate.type.ManyToOneType(com.test.domain.Environment)
[2015-08-27 19:18:03,758]DEBUG  5357[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run does not require a join.
[2015-08-27 19:18:03,759]DEBUG  5358[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'environment.id'
[2015-08-27 19:18:03,759]DEBUG  5358[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run.environment -> run2_.environment_id
[2015-08-27 19:18:03,759]DEBUG  5358[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : environment.id -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,759]DEBUG  5358[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run.environment.id -> run2_.environment_id
[2015-08-27 19:18:03,760]DEBUG  5359[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt -> run_testca0_.id
[2015-08-27 19:18:03,760]DEBUG  5359[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCase -> org.hibernate.type.ManyToOneType(com.test.domain.TestCase)
[2015-08-27 19:18:03,760]DEBUG  5359[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run_TestCase_TestResult does not require a join.
[2015-08-27 19:18:03,760]DEBUG  5359[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'testCase.id'
[2015-08-27 19:18:03,761]DEBUG  5360[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testCase -> run_testca0_.testCase_id
[2015-08-27 19:18:03,761]DEBUG  5360[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCase.id -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,761]DEBUG  5360[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : rtt.testCase.id -> run_testca0_.testCase_id
[2015-08-27 19:18:03,761]DEBUG  5360[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run -> run2_.id
[2015-08-27 19:18:03,762]DEBUG  5361[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : endTime -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,762]DEBUG  5361[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : run.endTime -> run2_.endTime
[2015-08-27 19:18:03,762]DEBUG  5361[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125) - select : finishing up [level=1, statement=select]
[2015-08-27 19:18:03,762]DEBUG  5361[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:671) - processQuery() :  ( SELECT ( {select clause} testresult1_.id ) ( FromClause{level=1} ( Run_TestCase_TestResult run_testca0_ TestResult testresult1_ Run run2_ ) ) ( where ( and ( = ( run2_.environment_id ( run2_.environment_id run2_.id environment ) id ) ? ) ( = ( run_testca0_.testCase_id ( run_testca0_.testCase_id run_testca0_.id testCase ) id ) ? ) ) ) ( order ( run2_.endTime run2_.id endTime ) desc ) )
[2015-08-27 19:18:03,763]DEBUG  5362[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [Run_TestCase_TestResult run_testca0_]
[2015-08-27 19:18:03,763]DEBUG  5362[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join TestResult testresult1_ on run_testca0_.testResult_id=testresult1_.id]
[2015-08-27 19:18:03,763]DEBUG  5362[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join Run run2_ on run_testca0_.run_id=run2_.id]
[2015-08-27 19:18:03,763]DEBUG  5362[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129) - select >> end [level=1, statement=select]
[2015-08-27 19:18:03,764]DEBUG  5363[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:281) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TestResult,Run,Run_TestCase_TestResult)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'testresult1_.id as id1_7_' {alias=tr, className=com.test.domain.TestResult, tableAlias=testresult1_}
    |  \-[SQL_TOKEN] SqlFragment: 'testresult1_.endTime as endTime2_7_, testresult1_.result as result3_7_, testresult1_.startTime as startTim4_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[rtt, run, tr], fromElementByTableAlias=[run_testca0_, run2_, testresult1_], fromElementsByPath=[rtt.testResult, rtt.run], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Run_TestCase_TestResult run_testca0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rtt,role=null,tableName=Run_TestCase_TestResult,tableAlias=run_testca0_,origin=null,columns={,className=com.test.domain.Run_TestCase_TestResult}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join TestResult testresult1_ on run_testca0_.testResult_id=testresult1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tr,role=com.test.domain.Run_TestCase_TestResult.testResult,tableName=TestResult,tableAlias=testresult1_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.testResult_id ,className=com.test.domain.TestResult}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join Run run2_ on run_testca0_.run_id=run2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=run,role=com.test.domain.Run_TestCase_TestResult.run,tableName=Run,tableAlias=run2_,origin=Run_TestCase_TestResult run_testca0_,columns={run_testca0_.run_id ,className=com.test.domain.Run}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'run2_.environment_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=environment.id,path=run.environment.id,tableAlias=run2_,className=com.test.domain.Run,classAlias=run}
    |     |  |  +-[DOT] DotNode: 'run2_.environment_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=environment.id,path=run.environment,tableAlias=run2_,className=com.test.domain.Run,classAlias=run}
    |     |  |  |  +-[ALIAS_REF] IdentNode: 'run2_.id' {alias=run, className=com.test.domain.Run, tableAlias=run2_}
    |     |  |  |  \-[IDENT] IdentNode: 'environment' {originalText=environment}
    |     |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=envId, expectedType=org.hibernate.type.LongType@16930c45}
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'run_testca0_.testCase_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=testCase.id,path=rtt.testCase.id,tableAlias=run_testca0_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
    |        |  +-[DOT] DotNode: 'run_testca0_.testCase_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=testCase.id,path=rtt.testCase,tableAlias=run_testca0_,className=com.test.domain.Run_TestCase_TestResult,classAlias=rtt}
    |        |  |  +-[ALIAS_REF] IdentNode: 'run_testca0_.id' {alias=rtt, className=com.test.domain.Run_TestCase_TestResult, tableAlias=run_testca0_}
    |        |  |  \-[IDENT] IdentNode: 'testCase' {originalText=testCase}
    |        |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=testCaseId, expectedType=org.hibernate.type.LongType@16930c45}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'run2_.endTime' {propertyName=endTime,dereferenceType=PRIMITIVE,getPropertyPath=endTime,path=run.endTime,tableAlias=run2_,className=com.test.domain.Run,classAlias=run}
       |  +-[ALIAS_REF] IdentNode: 'run2_.id' {alias=run, className=com.test.domain.Run, tableAlias=run2_}
       |  \-[IDENT] IdentNode: 'endTime' {originalText=endTime}
       \-[DESCENDING] SqlNode: 'desc'

[2015-08-27 19:18:03,764]DEBUG  5363[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,764]DEBUG  5363[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: select tr from com.test.domain.Run_TestCase_TestResult rtt join rtt.testResult tr join rtt.run run where run.environment.id = :envId and rtt.testCase.id = :testCaseId order by run.endTime desc
[2015-08-27 19:18:03,765]DEBUG  5364[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select testresult1_.id as id1_7_, testresult1_.endTime as endTime2_7_, testresult1_.result as result3_7_, testresult1_.startTime as startTim4_7_ from Run_TestCase_TestResult run_testca0_ inner join TestResult testresult1_ on run_testca0_.testResult_id=testresult1_.id inner join Run run2_ on run_testca0_.run_id=run2_.id where run2_.environment_id=? and run_testca0_.testCase_id=? order by run2_.endTime desc
[2015-08-27 19:18:03,765]DEBUG  5364[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,765]DEBUG  5364[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@31529882]
[2015-08-27 19:18:03,769]DEBUG  5368[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,769]DEBUG  5368[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testResultDao'
[2015-08-27 19:18:03,769]DEBUG  5368[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,770]DEBUG  5369[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'run_TestCase_TestResultService' to bean named 'testResultDao'
[2015-08-27 19:18:03,770]DEBUG  5369[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,770]DEBUG  5369[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'Run_TestCase_TestResultServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-08-27 19:18:03,771]DEBUG  5370[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'run_TestCase_TestResultService' with 0 common interceptors and 1 specific interceptors
[2015-08-27 19:18:03,771]DEBUG  5370[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.Run_TestCase_TestResultServiceImpl@72ed87a]
[2015-08-27 19:18:03,773]DEBUG  5372[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'run_TestCase_TestResultService'
[2015-08-27 19:18:03,773]DEBUG  5372[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testCaseService'
[2015-08-27 19:18:03,773]DEBUG  5372[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testCaseService'
[2015-08-27 19:18:03,774]DEBUG  5373[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.impl.TestCaseServiceImpl.testCaseDao
[2015-08-27 19:18:03,774]DEBUG  5373[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestCaseServiceImpl.testSuiteDao
[2015-08-27 19:18:03,774]DEBUG  5373[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.service.TestSuiteService com.test.service.impl.TestCaseServiceImpl.testSuiteService
[2015-08-27 19:18:03,774]DEBUG  5373[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestCaseServiceImpl]: AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.impl.TestCaseServiceImpl.run_TestCase_TestResultDao
[2015-08-27 19:18:03,774]DEBUG  5373[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testCaseService' to allow for resolving potential circular references
[2015-08-27 19:18:03,780]DEBUG  5379[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.dao.TestCaseDao com.test.service.impl.TestCaseServiceImpl.testCaseDao
[2015-08-27 19:18:03,780]DEBUG  5379[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testCaseDao'
[2015-08-27 19:18:03,780]DEBUG  5379[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'testCaseDao'
[2015-08-27 19:18:03,780]DEBUG  5379[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestCaseServiceImpl.testSuiteDao
[2015-08-27 19:18:03,781]DEBUG  5380[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testSuiteDao'
[2015-08-27 19:18:03,781]DEBUG  5380[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testSuiteDao'
[2015-08-27 19:18:03,781]DEBUG  5380[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
[2015-08-27 19:18:03,781]DEBUG  5380[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testSuiteDao' to allow for resolving potential circular references
[2015-08-27 19:18:03,782]DEBUG  5381[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteDao': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
[2015-08-27 19:18:03,782]DEBUG  5381[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1c8121b5'
[2015-08-27 19:18:03,782]DEBUG  5381[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4a6e6047'
[2015-08-27 19:18:03,783]DEBUG  5382[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name '(inner bean)#4a6e6047'
[2015-08-27 19:18:03,783]DEBUG  5382[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,783]DEBUG  5382[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4a6e6047'
[2015-08-27 19:18:03,783]DEBUG  5382[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,784]DEBUG  5383[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,784]DEBUG  5383[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1c8121b5'
[2015-08-27 19:18:03,784]DEBUG  5383[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#13ac9def'
[2015-08-27 19:18:03,785]DEBUG  5384[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,785]DEBUG  5384[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#13ac9def'
[2015-08-27 19:18:03,785]DEBUG  5384[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6b58aa6'
[2015-08-27 19:18:03,785]DEBUG  5384[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'entityManagerFactory'
[2015-08-27 19:18:03,787]DEBUG  5386[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,787]DEBUG  5386[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6b58aa6'
[2015-08-27 19:18:03,787]DEBUG  5386[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'jpaMappingContext'
[2015-08-27 19:18:03,789]DEBUG  5388[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1616) - Invoking afterPropertiesSet() on bean with name 'testSuiteDao'
[2015-08-27 19:18:03,789]DEBUG  5388[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,790]DEBUG  5389[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,790]DEBUG  5389[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,790]DEBUG  5389[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,791]DEBUG  5390[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,791]DEBUG  5390[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,793]DEBUG  5392[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,794]DEBUG  5393[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,796]DEBUG  5395[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,796]DEBUG  5395[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,798]DEBUG  5397[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,799]DEBUG  5398[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,799]DEBUG  5398[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,799]DEBUG  5398[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,799]DEBUG  5398[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,800]DEBUG  5399[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,802]DEBUG  5401[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,802]DEBUG  5401[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,805]DEBUG  5404[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,805]DEBUG  5404[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,805]DEBUG  5404[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource@6c94c6d4
[2015-08-27 19:18:03,806]DEBUG  5405[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByRun
[2015-08-27 19:18:03,807]DEBUG  5406[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:294) - parse() - HQL: select distinct testsuite from com.test.domain.TestSuite testsuite join testsuite.testCases tcs join tcs.run_TestCase_TestResults trr where trr.run.id = :runId
[2015-08-27 19:18:03,818]DEBUG  5417[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:312) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'TestSuite'
    |  |  |  \-[ALIAS] Node: 'testsuite'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'testsuite'
    |  |  |  |  \-[IDENT] Node: 'testCases'
    |  |  |  \-[ALIAS] Node: 'tcs'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'tcs'
    |  |     |  \-[IDENT] Node: 'run_TestCase_TestResults'
    |  |     \-[ALIAS] Node: 'trr'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'testsuite'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'trr'
          |  |  \-[IDENT] Node: 'run'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'runId'

[2015-08-27 19:18:03,818]DEBUG  5417[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,818]DEBUG  5417[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:121) - select << begin [level=1, statement=select]
[2015-08-27 19:18:03,819]DEBUG  5418[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestSuite (testsuite) -> testsuite0_
[2015-08-27 19:18:03,819]DEBUG  5418[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testsuite -> testsuite0_.id
[2015-08-27 19:18:03,819]DEBUG  5418[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : testCases -> org.hibernate.type.BagType(com.test.domain.TestSuite.testCases)
[2015-08-27 19:18:03,820]DEBUG  5419[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElementFactory.createEntityAssociation(FromElementFactory.java:405) - createEntityAssociation() : One to many - path = testsuite.testCases role = com.test.domain.TestSuite.testCases associatedEntityName = com.test.domain.TestCase
[2015-08-27 19:18:03,820]DEBUG  5419[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.TestCase (tcs) -> testcases1_
[2015-08-27 19:18:03,820]DEBUG  5419[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : testsuite.testCases -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tcs,role=null,tableName=TestCase,tableAlias=testcases1_,origin=TestSuite testsuite0_,columns={testsuite0_.id ,className=com.test.domain.TestCase}}
[2015-08-27 19:18:03,820]DEBUG  5419[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceCollection(DotNode.java:351) - dereferenceCollection() : Created new FROM element for testsuite.testCases : TestCase testcases1_
[2015-08-27 19:18:03,820]DEBUG  5419[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testsuite.testCases -> .
[2015-08-27 19:18:03,821]DEBUG  5420[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'TestCase testcases1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tcs,role=com.test.domain.TestSuite.testCases,tableName=TestCase,tableAlias=testcases1_,origin=TestSuite testsuite0_,columns={testsuite0_.id ,className=com.test.domain.TestCase}}

[2015-08-27 19:18:03,821]DEBUG  5420[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tcs -> testcases1_.id
[2015-08-27 19:18:03,821]DEBUG  5420[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run_TestCase_TestResults -> org.hibernate.type.BagType(com.test.domain.TestCase.run_TestCase_TestResults)
[2015-08-27 19:18:03,822]DEBUG  5421[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElementFactory.createEntityAssociation(FromElementFactory.java:405) - createEntityAssociation() : One to many - path = tcs.run_TestCase_TestResults role = com.test.domain.TestCase.run_TestCase_TestResults associatedEntityName = com.test.domain.Run_TestCase_TestResult
[2015-08-27 19:18:03,822]DEBUG  5421[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:158) - FromClause{level=1} : com.test.domain.Run_TestCase_TestResult (trr) -> run_testca2_
[2015-08-27 19:18:03,822]DEBUG  5421[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromClause.addJoinByPathMap(FromClause.java:284) - addJoinByPathMap() : tcs.run_TestCase_TestResults -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=trr,role=null,tableName=Run_TestCase_TestResult,tableAlias=run_testca2_,origin=TestCase testcases1_,columns={testcases1_.id ,className=com.test.domain.Run_TestCase_TestResult}}
[2015-08-27 19:18:03,822]DEBUG  5421[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceCollection(DotNode.java:351) - dereferenceCollection() : Created new FROM element for tcs.run_TestCase_TestResults : Run_TestCase_TestResult run_testca2_
[2015-08-27 19:18:03,823]DEBUG  5422[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : tcs.run_TestCase_TestResults -> .
[2015-08-27 19:18:03,823]DEBUG  5422[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:425) - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Run_TestCase_TestResult run_testca2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=trr,role=com.test.domain.TestCase.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca2_,origin=TestCase testcases1_,columns={testcases1_.id ,className=com.test.domain.Run_TestCase_TestResult}}

[2015-08-27 19:18:03,823]DEBUG  5422[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : testsuite -> testsuite0_.id
[2015-08-27 19:18:03,823]DEBUG  5422[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : trr -> run_testca2_.id
[2015-08-27 19:18:03,824]DEBUG  5423[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run -> org.hibernate.type.ManyToOneType(com.test.domain.Run)
[2015-08-27 19:18:03,824]DEBUG  5423[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.dereferenceEntityIdentifier(DotNode.java:625) - dereferenceShortcut() : property id in com.test.domain.Run_TestCase_TestResult does not require a join.
[2015-08-27 19:18:03,824]DEBUG  5423[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.setPropertyNameAndPath(DotNode.java:650) - Unresolved property path is now 'run.id'
[2015-08-27 19:18:03,824]DEBUG  5423[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : trr.run -> run_testca2_.run_id
[2015-08-27 19:18:03,825]DEBUG  5424[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:666) - getDataType() : run.id -> org.hibernate.type.LongType@16930c45
[2015-08-27 19:18:03,825]DEBUG  5424[localhost-startStop-1] - org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:77) - Resolved : trr.run.id -> run_testca2_.run_id
[2015-08-27 19:18:03,825]DEBUG  5424[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:125) - select : finishing up [level=1, statement=select]
[2015-08-27 19:18:03,825]DEBUG  5424[localhost-startStop-1] - org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:671) - processQuery() :  ( SELECT ( {select clause} distinct testsuite0_.id ) ( FromClause{level=1} ( TestSuite testsuite0_ ( TestCase testcases1_ Run_TestCase_TestResult run_testca2_ ) ) ) ( where ( = ( run_testca2_.run_id ( run_testca2_.run_id run_testca2_.id run ) id ) ? ) ) )
[2015-08-27 19:18:03,826]DEBUG  5425[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [TestSuite testsuite0_]
[2015-08-27 19:18:03,826]DEBUG  5425[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id]
[2015-08-27 19:18:03,826]DEBUG  5425[localhost-startStop-1] - org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:187) - Using FROM fragment [inner join Run_TestCase_TestResult run_testca2_ on testcases1_.id=run_testca2_.testCase_id]
[2015-08-27 19:18:03,826]DEBUG  5425[localhost-startStop-1] - org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:129) - select >> end [level=1, statement=select]
[2015-08-27 19:18:03,827]DEBUG  5426[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:281) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TestSuite,TestCase,Run_TestCase_TestResult)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'testsuite0_.id as id1_8_' {alias=testsuite, className=com.test.domain.TestSuite, tableAlias=testsuite0_}
    |  \-[SQL_TOKEN] SqlFragment: 'testsuite0_.name as name2_8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[testsuite, tcs, trr], fromElementByTableAlias=[run_testca2_, testsuite0_, testcases1_], fromElementsByPath=[tcs.run_TestCase_TestResults, testsuite.testCases], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TestSuite testsuite0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=testsuite,role=null,tableName=TestSuite,tableAlias=testsuite0_,origin=null,columns={,className=com.test.domain.TestSuite}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tcs,role=com.test.domain.TestSuite.testCases,tableName=TestCase,tableAlias=testcases1_,origin=TestSuite testsuite0_,columns={testsuite0_.id ,className=com.test.domain.TestCase}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join Run_TestCase_TestResult run_testca2_ on testcases1_.id=run_testca2_.testCase_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=trr,role=com.test.domain.TestCase.run_TestCase_TestResults,tableName=Run_TestCase_TestResult,tableAlias=run_testca2_,origin=inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id,columns={testcases1_.id ,className=com.test.domain.Run_TestCase_TestResult}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'run_testca2_.run_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=run.id,path=trr.run.id,tableAlias=run_testca2_,className=com.test.domain.Run_TestCase_TestResult,classAlias=trr}
          |  +-[DOT] DotNode: 'run_testca2_.run_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=run.id,path=trr.run,tableAlias=run_testca2_,className=com.test.domain.Run_TestCase_TestResult,classAlias=trr}
          |  |  +-[ALIAS_REF] IdentNode: 'run_testca2_.id' {alias=trr, className=com.test.domain.Run_TestCase_TestResult, tableAlias=run_testca2_}
          |  |  \-[IDENT] IdentNode: 'run' {originalText=run}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=runId, expectedType=org.hibernate.type.LongType@16930c45}

[2015-08-27 19:18:03,827]DEBUG  5426[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,827]DEBUG  5426[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:263) - HQL: select distinct testsuite from com.test.domain.TestSuite testsuite join testsuite.testCases tcs join tcs.run_TestCase_TestResults trr where trr.run.id = :runId
[2015-08-27 19:18:03,827]DEBUG  5426[localhost-startStop-1] - org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:264) - SQL: select distinct testsuite0_.id as id1_8_, testsuite0_.name as name2_8_ from TestSuite testsuite0_ inner join TestCase testcases1_ on testsuite0_.id=testcases1_.testSuite_id inner join Run_TestCase_TestResult run_testca2_ on testcases1_.id=run_testca2_.testCase_id where run_testca2_.run_id=?
[2015-08-27 19:18:03,828]DEBUG  5427[localhost-startStop-1] - org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:113) - throwQueryException() : no errors
[2015-08-27 19:18:03,829]DEBUG  5428[localhost-startStop-1] - org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:52) - Looking up query for method findByName
[2015-08-27 19:18:03,829]DEBUG  5428[localhost-startStop-1] - org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:119) - Looking up named query TestSuite.findByName
[2015-08-27 19:18:03,829]DEBUG  5428[localhost-startStop-1] - org.hibernate.jpa.spi.AbstractEntityManagerImpl.markForRollbackOnly(AbstractEntityManagerImpl.java:1529) - Mark transaction for rollback
[2015-08-27 19:18:03,830]DEBUG  5429[localhost-startStop-1] - org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:102) - Did not find named query TestSuite.findByName
[2015-08-27 19:18:03,830]DEBUG  5429[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,830]DEBUG  5429[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,831]DEBUG  5430[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,831]DEBUG  5430[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,831]DEBUG  5430[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,831]DEBUG  5430[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,834]DEBUG  5433[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,834]DEBUG  5433[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,836]DEBUG  5435[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,837]DEBUG  5436[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,837]DEBUG  5436[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,837]DEBUG  5436[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,837]DEBUG  5436[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,838]DEBUG  5437[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,838]DEBUG  5437[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,838]DEBUG  5437[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,841]DEBUG  5440[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,841]DEBUG  5440[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,843]DEBUG  5442[localhost-startStop-1] - org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:282) - Creating new EntityManager for shared EntityManager invocation
[2015-08-27 19:18:03,843]DEBUG  5442[localhost-startStop-1] - org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:432) - Closing JPA EntityManager
[2015-08-27 19:18:03,844]DEBUG  5443[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@6b7255e1]
[2015-08-27 19:18:03,847]DEBUG  5446[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,847]DEBUG  5446[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testSuiteDao'
[2015-08-27 19:18:03,847]DEBUG  5446[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,849]DEBUG  5448[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'testSuiteDao'
[2015-08-27 19:18:03,850]DEBUG  5449[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.service.TestSuiteService com.test.service.impl.TestCaseServiceImpl.testSuiteService
[2015-08-27 19:18:03,850]DEBUG  5449[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testSuiteService'
[2015-08-27 19:18:03,850]DEBUG  5449[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testSuiteService'
[2015-08-27 19:18:03,851]DEBUG  5450[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestSuiteServiceImpl]: AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestSuiteServiceImpl.testSuiteDao
[2015-08-27 19:18:03,851]DEBUG  5450[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestSuiteServiceImpl]: AutowiredFieldElement for private com.test.service.RunService com.test.service.impl.TestSuiteServiceImpl.runService
[2015-08-27 19:18:03,852]DEBUG  5451[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestSuiteServiceImpl]: AutowiredFieldElement for private com.test.dao.RunDao com.test.service.impl.TestSuiteServiceImpl.runDao
[2015-08-27 19:18:03,852]DEBUG  5451[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testSuiteService' to allow for resolving potential circular references
[2015-08-27 19:18:03,857]DEBUG  5456[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteService': AutowiredFieldElement for private com.test.dao.TestSuiteDao com.test.service.impl.TestSuiteServiceImpl.testSuiteDao
[2015-08-27 19:18:03,857]DEBUG  5456[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testSuiteDao'
[2015-08-27 19:18:03,857]DEBUG  5456[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testSuiteService' to bean named 'testSuiteDao'
[2015-08-27 19:18:03,858]DEBUG  5457[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteService': AutowiredFieldElement for private com.test.service.RunService com.test.service.impl.TestSuiteServiceImpl.runService
[2015-08-27 19:18:03,858]DEBUG  5457[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runService'
[2015-08-27 19:18:03,858]DEBUG  5457[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testSuiteService' to bean named 'runService'
[2015-08-27 19:18:03,858]DEBUG  5457[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testSuiteService': AutowiredFieldElement for private com.test.dao.RunDao com.test.service.impl.TestSuiteServiceImpl.runDao
[2015-08-27 19:18:03,859]DEBUG  5458[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'runDao'
[2015-08-27 19:18:03,859]DEBUG  5458[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testSuiteService' to bean named 'runDao'
[2015-08-27 19:18:03,859]DEBUG  5458[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,859]DEBUG  5458[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'TestSuiteServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-08-27 19:18:03,860]DEBUG  5459[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'testSuiteService' with 0 common interceptors and 1 specific interceptors
[2015-08-27 19:18:03,860]DEBUG  5459[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.TestSuiteServiceImpl@5c871cae]
[2015-08-27 19:18:03,862]DEBUG  5461[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testSuiteService'
[2015-08-27 19:18:03,862]DEBUG  5461[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'testSuiteService'
[2015-08-27 19:18:03,862]DEBUG  5461[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testCaseService': AutowiredFieldElement for private com.test.dao.Run_TestCase_TestResultDao com.test.service.impl.TestCaseServiceImpl.run_TestCase_TestResultDao
[2015-08-27 19:18:03,862]DEBUG  5461[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'env_TestCase_TestResultDao'
[2015-08-27 19:18:03,863]DEBUG  5462[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testCaseService' to bean named 'env_TestCase_TestResultDao'
[2015-08-27 19:18:03,863]DEBUG  5462[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-08-27 19:18:03,863]DEBUG  5462[localhost-startStop-1] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:108) - Adding transactional method 'TestCaseServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2015-08-27 19:18:03,863]DEBUG  5462[localhost-startStop-1] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505) - Creating implicit proxy for bean 'testCaseService' with 0 common interceptors and 1 specific interceptors
[2015-08-27 19:18:03,863]DEBUG  5462[localhost-startStop-1] - org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.test.service.impl.TestCaseServiceImpl@45158003]
[2015-08-27 19:18:03,866]DEBUG  5465[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'testCaseService'
[2015-08-27 19:18:03,866]DEBUG  5465[localhost-startStop-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'testResultService'
[2015-08-27 19:18:03,866]DEBUG  5465[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'testResultService'
[2015-08-27 19:18:03,867]DEBUG  5466[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72) - Registered injected element on class [com.test.service.impl.TestResultServiceImpl]: AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.impl.TestResultServiceImpl.testResultDao
[2015-08-27 19:18:03,867]DEBUG  5466[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'testResultService' to allow for resolving potential circular references
[2015-08-27 19:18:03,872]DEBUG  5471[localhost-startStop-1] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86) - Processing injected element of bean 'testResultService': AutowiredFieldElement for private com.test.dao.TestResultDao com.test.service.impl.TestResultServiceImpl.testResultDao
[2015-08-27 19:18:03,873]DEBUG  5472[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'testResultDao'
[2015-08-27 19:18:03,873]DEBUG  5472[localhost-startStop-1] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:480) - Autowiring by type from bean name 'testResultService' to bean named 'testResultDao'
[2015-08-27 19:18:03,873]DEBUG  5472[localhost-startStop-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
